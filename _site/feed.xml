<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4001/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4001/" rel="alternate" type="text/html" /><updated>2025-09-12T00:22:43-04:00</updated><id>http://localhost:4001/feed.xml</id><title type="html">Ayush Kumar Shah</title><subtitle>My personal website to share my academic profile and research contributions. I also share my ideas and a reflection of intereseting topics I learn mostly in the field of Artificial Intelligence and Python.</subtitle><author><name>Ayush Kumar Shah, PhD</name><email>ayush.kumar.shah@gmail.com</email></author><entry><title type="html">Common commands</title><link href="http://localhost:4001/2020/08/common-commands/" rel="alternate" type="text/html" title="Common commands" /><published>2020-08-12T13:00:00-04:00</published><updated>2020-08-12T13:00:00-04:00</updated><id>http://localhost:4001/2020/08/common-commands</id><content type="html" xml:base="http://localhost:4001/2020/08/common-commands/">&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#general-shell-commands&quot;&gt;General Shell Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ssh-commands&quot;&gt;SSH Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tmux-commands&quot;&gt;tmux commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#vim-commands&quot;&gt;Vim Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#git-commands&quot;&gt;Git Commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#i3wm-commands&quot;&gt;i3wm commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#brew-bundle-for-osx&quot;&gt;Brew bundle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;general-shell-commands&quot;&gt;General shell commands&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Commands&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo $SHELL&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Display name of active shell (bash or zsh or others)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;man command-name&lt;/code&gt; &lt;br /&gt; Eg: man bash | grep -C2 ‘$@’&lt;/td&gt;
      &lt;td&gt;Get information about the command &lt;br /&gt; Here, return 2 leading and trailing lines around the matching text ‘$@’ in the information&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command-name --help&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Information about the command usage&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pwd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;get current path&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pwd | pbcopy&lt;/td&gt;
      &lt;td&gt;copy current path to clipboard (Use xcopy or xsel for linux)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd -&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;go back to previous location&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;take new_dir&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;create new_dir and cd into it i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mkdir new_dir; cd new_dir&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -al&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;List. a - all &lt;br /&gt; l - long listing format &lt;br /&gt; d means directory - means file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls -ls&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;list files with detailed info (permission, date, symoblic links)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ls -1 | wc -l&lt;/td&gt;
      &lt;td&gt;count number of files in a directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat filename&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;show the contents of the file filename&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tee &lt;br /&gt; Eg: df -h | tee usage.txt&lt;/td&gt;
      &lt;td&gt;display stdout of a command and write it in a file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;free -h&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show RAM - space used and free&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;df -h&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show disk information - space used and free&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;du -sh .&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show total size occupied by current directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;du -sh *&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show size of each file or folder in current directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;du -sh * | tail -1&lt;/td&gt;
      &lt;td&gt;Show total size occupied by the last file in the current directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ps ax[c] [| less]&lt;/td&gt;
      &lt;td&gt;List currently running programs. &lt;br /&gt;c - easier to read&lt;br /&gt;less - easier to navigate&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pidof process-name&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Get the process id of a running process.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kill process-id&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Kill the process&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uname [-[s][a]]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Display name of OS Distribution. a - Detailed info.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stat filename&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Display file status&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;alias alias-name&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Shows the alias actual command&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;date +format&lt;/code&gt; E.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;date +%d/%m/%Y&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Date command&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cal [-3] [[month] year]&lt;/code&gt; &lt;br /&gt; E.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cal -3 june 1996&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cal 1997&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cal&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Calendar command. -3 means show previous and the next month as well.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;less file.txt&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show file contents (similar to cat but allows to move up and down)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;more file.txt&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show file contents (similar to cat but allows to move up and down)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rm -ir&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Remove. i - prompt to ask permission for each file. r - recursively delete&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grep [-i] text_to_search /path/to/file&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Search for contents in a file , i - case insensitive&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grep -v text_to_search /path/to/file&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Search for contents not matching the pattern in a file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command &amp;gt; file.txt&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;adds output of command to file.txt. Creates a new file if does not exist. If exists, overwrites the contents of the file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command &amp;gt;&amp;gt; file.txt&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;adds output of command to file.txt. Creates a new file if does not exist. If exists, appends the outputs to the contents of the file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find / -name &quot;file_name&quot; [2&amp;gt;/dev/null]&lt;/code&gt; &lt;br /&gt; Eg: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find \ -name &quot;*backup*&quot; 2/dev/null&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find file from the root directory &lt;br /&gt; 2/dev/null: 2 takes error output and redirects to dev/null where it is deleted&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find . -not -name &quot;file_name&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find files not matching the filename&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;find . -name “file_name” | xargs -I % rm %&lt;/td&gt;
      &lt;td&gt;Find and delete files matching the filename&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find . -name &quot;file_name&quot; -exec rm -i {} \;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find and delete files matching the filename&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find . -type d -name &quot;input_features&quot; -print | tee /dev/tty | xargs -P 16 -I {} rm -rf &quot;{}&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find and delete directories matching the directory name or filename in parallel with specified number of cores&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find . -name &quot;file_name&quot; -exec grep &quot;Hello&quot; -i {} \;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find and search “Hello” in files matching the filename&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find -E . -regex &quot;.*/file_name[0-9].sh&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find files matching the regular expression (this syntax works only in osx)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;find -E . -not -regex &quot;.*/file_name[0-9].sh&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Find files not matching the regular expression (this syntax works only in osx)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;command | grep text_to_search &lt;br /&gt; Eg: find / -name “&lt;em&gt;backup&lt;/em&gt;” 2&amp;gt;/dev/null | grep $USER&lt;/td&gt;
      &lt;td&gt;Using pipe to combine grep with other commands&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awk&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;very powerful command for pattern scanning and processing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-T&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;fzf: fuzzy finding files or directories &lt;br /&gt; You need to install fzf&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-R&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;fzf: fuzzy finding commands in history&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Esc-C&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;fzf: fuzzy finding files or directories from current path&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;top&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;htop&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ytop&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gotop&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Process info and CPU Usage  (You need to install htop or ytop)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tree [-aldf][-L level][-P pattern][-I pattern][-o filename] &lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;display directory’s contents in a  tree &lt;br /&gt; a - all files &lt;br /&gt; l - symbolic links &lt;br /&gt; d - directories only &lt;br /&gt; L - limit number of levels of directory &lt;br /&gt; I - files not matching pattern &lt;br /&gt; P - files matching pattern &lt;br /&gt; o - output to filename &lt;br /&gt; You need to install tree&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsof /dev/nvidia* | awk '{print $2}'&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Display ids of processes utilizing CUDA/GPU&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;ssh-commands&quot;&gt;SSH Commands&lt;/h1&gt;

&lt;h2 id=&quot;ssh-tunnelling&quot;&gt;SSH Tunnelling&lt;/h2&gt;

&lt;p&gt;To access servers hosted on the remote machine from the local machine&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-NL&lt;/span&gt; port1_server:localhost:port1_local &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-NL&lt;/span&gt; port2_server:localhost:port2_local]&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;multiple ports possible&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; username@remote-ip-address
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh &lt;span class=&quot;nt&quot;&gt;-NL&lt;/span&gt; 8888:localhost:8888 ayush@192.168.100.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;copy-multiple-files-from-remote-to-local&quot;&gt;Copy multiple files from remote to local:&lt;/h2&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;scp username@remote-ip:/some/remote/directory/&lt;span class=&quot;se&quot;&gt;\{&lt;/span&gt;file1,file2,file3&lt;span class=&quot;se&quot;&gt;\}&lt;/span&gt; /localpath
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;scp username@remote-ip:&lt;span class=&quot;s1&quot;&gt;'/path1/file1 /path2/file2 /path3/file3'&lt;/span&gt; /localPath
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;other-ssh-commands&quot;&gt;Other ssh commands&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Generate ssh key:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Using ed25519 (more secure: Recommended)&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; ed25519
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using RSA&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; 3072
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Save ssh host info&lt;/strong&gt;
Modify this file: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/config&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; *
    &lt;span class=&quot;n&quot;&gt;AddKeysToAgent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yes&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UseKeychain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yes&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;IdentityFile&lt;/span&gt; ~/.&lt;span class=&quot;n&quot;&gt;ssh&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;id_rsa&lt;/span&gt; (&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;)

&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;targaryen&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HostName&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;192&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;168&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;daenerys&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Port&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7654&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tyrell&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HostName&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;192&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;168&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;martell&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;HostName&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;192&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;168&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; *&lt;span class=&quot;n&quot;&gt;ell&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oberyn&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; * !&lt;span class=&quot;n&quot;&gt;martell&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LogLevel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Host&lt;/span&gt; *
    &lt;span class=&quot;n&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Compression&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yes&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Save ssh password so that no need to re-enter every time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Run this in client (not server)&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;ssh-copy-id -i path/to/key.pub username@server-ip-address
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub ayush@192.168.1.107
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Open server in nautilus / file explorer in linux&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;File explorer: Other locations &amp;gt; Connect to server &amp;gt; sftp://username@ip/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;tmux-commands&quot;&gt;tmux commands&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;tmux&lt;/td&gt;
      &lt;td&gt;Create a tmux session with default window name 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tmux new -As name&lt;/td&gt;
      &lt;td&gt;Create a tmux session with a name or attach to an existing session (if it exists)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tmux ls&lt;/td&gt;
      &lt;td&gt;List the active tmux sessions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tmux a -t name&lt;/td&gt;
      &lt;td&gt;Attach to an existing tmux session&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;tmux kill-session- t name&lt;/td&gt;
      &lt;td&gt;Kill an existing tmux session&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; = &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-B&amp;gt;&lt;/code&gt; (default), can be changed to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-A&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; [%”]&lt;/td&gt;
      &lt;td&gt;(Splitting panes)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[c-D]&lt;/td&gt;
      &lt;td&gt;(exit)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; D&lt;/td&gt;
      &lt;td&gt;(get out )&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; c&lt;/td&gt;
      &lt;td&gt;Create a new window (appears in status bar)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 0&lt;/td&gt;
      &lt;td&gt;Switch to window 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; 1&lt;/td&gt;
      &lt;td&gt;Switch to window 1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; x&lt;/td&gt;
      &lt;td&gt;Kill current window&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; d&lt;/td&gt;
      &lt;td&gt;Detach tmux (exit back to normal terminal)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; z&lt;/td&gt;
      &lt;td&gt;the active pane is toggled between zoomed and unzoomed&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; space&lt;/td&gt;
      &lt;td&gt;switch between split orientations&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; !&lt;/td&gt;
      &lt;td&gt;Break current pane to a new window&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; | Swap pane within a window&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; ()&lt;/td&gt;
      &lt;td&gt;Switch between tmux sessions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-o&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Swap pane within a window&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; :move-window -t 2&lt;/td&gt;
      &lt;td&gt;rename current window to 2 if 2 does not exist&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; :resize-pane -D n&lt;/td&gt;
      &lt;td&gt;Resizes the current pane down by n cells&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; :resize-pane -U n&lt;/td&gt;
      &lt;td&gt;Resizes the current pane upward by n cells&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; :resize-pane -L n&lt;/td&gt;
      &lt;td&gt;Resizes the current pane left by n cells&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; :resize-pane -R n&lt;/td&gt;
      &lt;td&gt;Resizes the current pane right by n cells&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; :join-pane [-dhv] [-l size &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;|&lt;/code&gt; -p percentage] [-s src-pane] [-t dst-pane] &lt;br /&gt; Eg: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; :join-pane -v -s 4 -t :1&lt;/td&gt;
      &lt;td&gt;Join one pane to another&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-S&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;save current state &lt;br /&gt; You need to install tmux-resurrect&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-R&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;reload saved state&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;vim-commands&quot;&gt;Vim commands&lt;/h1&gt;

&lt;h2 id=&quot;i-pure-vim&quot;&gt;I. Pure Vim&lt;/h2&gt;

&lt;h3 id=&quot;syntax&quot;&gt;Syntax:&lt;/h3&gt;

&lt;p&gt;Verbs (operations) + Noun (text on which operation is performed)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[count] [operation] [text object / motion]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;run-bash-commands-in-vim&quot;&gt;Run bash commands in vim&lt;/h3&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;:[.]!&lt;/span&gt;command
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;. (dot)&lt;/code&gt; - outputs the command into the current buffer&lt;/p&gt;

&lt;h3 id=&quot;1-vim-verbs-operations&quot;&gt;1. VIM Verbs (operations)&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;c&lt;/td&gt;
      &lt;td&gt;change&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;d&lt;/td&gt;
      &lt;td&gt;delete&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;change everything from where your cursor is to the end of the line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;D&lt;/td&gt;
      &lt;td&gt;delete everything from where your cursor is to the end of the line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dd&lt;/td&gt;
      &lt;td&gt;delete a line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;x&lt;/td&gt;
      &lt;td&gt;delete a sigle character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;y&lt;/td&gt;
      &lt;td&gt;yank text into the copy buffer.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;yy or Y&lt;/td&gt;
      &lt;td&gt;yank line into the copy buffer.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;v&lt;/td&gt;
      &lt;td&gt;highlight one character at a time.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;V&lt;/td&gt;
      &lt;td&gt;highlight one line at a time.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-v&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;highlight by columns.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;p&lt;/td&gt;
      &lt;td&gt;paste text after the current line.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;P&lt;/td&gt;
      &lt;td&gt;paste text on the current line.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;Shift Right&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;lt;&lt;/td&gt;
      &lt;td&gt;Shift Left&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;=&lt;/td&gt;
      &lt;td&gt;Indent&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gU&lt;/td&gt;
      &lt;td&gt;make uppercase&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gu&lt;/td&gt;
      &lt;td&gt;make lowercase&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;~&lt;/td&gt;
      &lt;td&gt;swap case&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;2-vim-nouns-text&quot;&gt;2. VIM Nouns (text)&lt;/h3&gt;

&lt;h4 id=&quot;i-text-objects&quot;&gt;i. Text Objects&lt;/h4&gt;

&lt;p&gt;Must be combined with verbs&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;iw&lt;/td&gt;
      &lt;td&gt;inner word (non whitespace) (works from anywhere in a word)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;aw&lt;/td&gt;
      &lt;td&gt;word with surrounding white space (works from anywhere in a word) &lt;br /&gt; aw ~ W. Difference in position. E.g. For dw, cursor must be at beginning, whereas daw works from any position.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ib&lt;/td&gt;
      &lt;td&gt;inner bracket (the contents of an HTML tag)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ab&lt;/td&gt;
      &lt;td&gt;a bracket&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;it&lt;/td&gt;
      &lt;td&gt;inner tag (the contents of an HTML tag)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;at&lt;/td&gt;
      &lt;td&gt;a tag block&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;i”&lt;/td&gt;
      &lt;td&gt;inner quotes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a”&lt;/td&gt;
      &lt;td&gt;a quote&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ip&lt;/td&gt;
      &lt;td&gt;inner paragraph&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ap&lt;/td&gt;
      &lt;td&gt;a paragraph&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;is&lt;/td&gt;
      &lt;td&gt;inner sentence&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;as&lt;/td&gt;
      &lt;td&gt;a sentence&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Combination examples:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;gUiw&lt;/td&gt;
      &lt;td&gt;capitalize a word&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ci(&lt;/td&gt;
      &lt;td&gt;change inner bracket&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6dW&lt;/td&gt;
      &lt;td&gt;delete 6 words&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;yis&lt;/td&gt;
      &lt;td&gt;copy inner sentence&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;di”&lt;/td&gt;
      &lt;td&gt;delete inner quotes&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;ii-motions&quot;&gt;ii. Motions&lt;/h4&gt;

&lt;p&gt;Can be combined with verbs or used independently&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[count] w/W&lt;/td&gt;
      &lt;td&gt;go a (word / word with whitespace) to right&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[count] b/B&lt;/td&gt;
      &lt;td&gt;go a (word / word with whitespace) to left&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[count] e/E&lt;/td&gt;
      &lt;td&gt;go to the end of (word / word with whitespace)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[count] ]m&lt;/td&gt;
      &lt;td&gt;go to the beginning of next method&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[count] h / j / k / l&lt;/td&gt;
      &lt;td&gt;left / down / up / right&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[count] f/F [char] [;,]+&lt;/td&gt;
      &lt;td&gt;go to the next occurence of character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[count] t/T [char] [;,]+&lt;/td&gt;
      &lt;td&gt;go to just before the next occurence of character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;%&lt;/td&gt;
      &lt;td&gt;move to matching parenthesis pair&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[count] +&lt;/td&gt;
      &lt;td&gt;down to first non blank char of the line.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[count]$&lt;/td&gt;
      &lt;td&gt;moves the cursor to the end of the line.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;moves the cursor to the beginning of the line.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;G&lt;/td&gt;
      &lt;td&gt;move to the end of the file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gg&lt;/td&gt;
      &lt;td&gt;move to the beginning of the file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;]m or [m&lt;/td&gt;
      &lt;td&gt;Mode between methods.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Combination examples:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;3ce&lt;/td&gt;
      &lt;td&gt;Change 3 words to end&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;d]m&lt;/td&gt;
      &lt;td&gt;delete start of next method&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ctL&lt;/td&gt;
      &lt;td&gt;change upto before the next occurence of L&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;d]m&lt;/td&gt;
      &lt;td&gt;delete start of next method&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;3-other-important-vim-commands&quot;&gt;3. Other important vim commands&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;i&lt;/td&gt;
      &lt;td&gt;Insert to left of cursor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;Insert to right of cursor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;insert at end of line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;I&lt;/td&gt;
      &lt;td&gt;insert at beginning of line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;o&lt;/td&gt;
      &lt;td&gt;insert at beginning of next line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;O&lt;/td&gt;
      &lt;td&gt;insert at beginning of previous line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;u&lt;/td&gt;
      &lt;td&gt;undo&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-r&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;will redo the last undo.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/text&lt;/td&gt;
      &lt;td&gt;search for text&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:%s/text/replacement text/g&lt;/td&gt;
      &lt;td&gt;search through the entire document for text and replace it with replacement text.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:%s/text/replacement text/gc&lt;/td&gt;
      &lt;td&gt;search through the entire document and confirm before replacing text.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;*&lt;/td&gt;
      &lt;td&gt;search forward for word under cursor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;#&lt;/td&gt;
      &lt;td&gt;search backward for word under cursor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:vsplit&lt;/td&gt;
      &lt;td&gt;vertical split windows&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;m[a-zA-Z]&lt;/td&gt;
      &lt;td&gt;sets a custom mark whose location can be accessed using `[mark] and line accessed using ‘[mark]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;g;&lt;/td&gt;
      &lt;td&gt;goto last cursor position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;’.&lt;/td&gt;
      &lt;td&gt;move to the last edit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:marks&lt;/td&gt;
      &lt;td&gt;show all current marks that are being used&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:w&lt;/td&gt;
      &lt;td&gt;write&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:w file_name&lt;/td&gt;
      &lt;td&gt;write the changes to a new file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:q&lt;/td&gt;
      &lt;td&gt;quit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:q! or ZQ&lt;/td&gt;
      &lt;td&gt;force quit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:wq or ZZ&lt;/td&gt;
      &lt;td&gt;write and quit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:w !sudo tee %&lt;/td&gt;
      &lt;td&gt;Write with sudo permissions if permission not available&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:bd&lt;/td&gt;
      &lt;td&gt;remove buffer&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[:vert] :sf filename&lt;/td&gt;
      &lt;td&gt;find file and open in split mode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-v&amp;gt;&lt;/code&gt; select multiple lines then I or A and type the required text&lt;/td&gt;
      &lt;td&gt;insert text at multiple lines at the beginning or the end&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;q &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;char&lt;/code&gt;&amp;gt; commands q &lt;br /&gt; [count] @&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;char&lt;/code&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;record command macros &lt;br /&gt; apply recorded commands&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:ab ipho International Physics Olympiad&lt;/td&gt;
      &lt;td&gt;Set abbreviation for long terms for easy typing &lt;br /&gt; Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-v&amp;gt;&lt;/code&gt; to prevent expansion&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;norm command. Eg &lt;br /&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vip&lt;/code&gt; then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:norm Ithis comes to the left&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Applies sequence of button presses / commands to each line selected &lt;br /&gt; Select a paragraph and add the text to the left of each line in the paragraph&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Global commands. Eg &lt;br /&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:g/^@/m$&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Apply commands to lines matching particular pattern &lt;br /&gt; Move all lines starting with @ to the end of the document&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Timetravel Eg &lt;br /&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:earlier 10m&lt;/code&gt; &lt;br /&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:earlier 5h&lt;/code&gt; &lt;br /&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:later 2h&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Move to the file state in the past or future as specified&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;4-useful-key-remappings&quot;&gt;4. Useful key remappings&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;jk (Custom- &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inoremap jk &amp;lt;Esc&amp;gt;&lt;/code&gt; )&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;kj (Custom)&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inoremap kj &amp;lt;Esc&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-c&amp;gt;| &amp;lt;Esc&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-s&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:w&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-Q&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;:wq!&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Better window navigation&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-h&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-w&amp;gt;h&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-j&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-w&amp;gt;j&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-k&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-w&amp;gt;k&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;nnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-l&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-w&amp;gt;l&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;5-using-args&quot;&gt;5. Using Args&lt;/h3&gt;

&lt;p&gt;Args are list of files initially opened. So, it’s a subset of buffers.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:args&lt;/td&gt;
      &lt;td&gt;display args files&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:args &lt;em&gt;*/&lt;/em&gt;.yaml&lt;/td&gt;
      &lt;td&gt;add files to args&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:sall&lt;/td&gt;
      &lt;td&gt;open all args files in split mode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:vert sall&lt;/td&gt;
      &lt;td&gt;open all args files in vertical split mode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:windo difft&lt;/td&gt;
      &lt;td&gt;show differences in all args files&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;c-x, c-l&lt;/td&gt;
      &lt;td&gt;autocomplete&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:vim TODO/ ##&lt;/td&gt;
      &lt;td&gt;search in all args files&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:cdo s/TODO/DONE/g&lt;/td&gt;
      &lt;td&gt;replace in all args files&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;6-scrolling-and-motions&quot;&gt;6. Scrolling and motions&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-u&lt;/code&gt;&amp;gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-d&lt;/code&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;Up, down scroll&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;{ }&lt;/td&gt;
      &lt;td&gt;Up, down scroll between spaces&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-b&lt;/code&gt;&amp;gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-f&lt;/code&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;Up, down full screen scroll&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-y&lt;/code&gt;&amp;gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-e&lt;/code&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;Up, down scroll by lines&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;H / M / L&lt;/td&gt;
      &lt;td&gt;Navigations to top / middle / bottom&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zt&lt;/td&gt;
      &lt;td&gt;Put current cursor position to top&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zz&lt;/td&gt;
      &lt;td&gt;Put current cursor position to middle&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zb&lt;/td&gt;
      &lt;td&gt;Put current cursor position to bottom&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;ii-vim-plugins-commands&quot;&gt;II. Vim Plugins commands&lt;/h2&gt;

&lt;p&gt;Install any vim plugin manager like vim-plug.&lt;/p&gt;

&lt;p&gt;To apply latest settings:&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;source&lt;/span&gt; $MYVIMRC
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;ranger&quot;&gt;Ranger&lt;/h3&gt;

&lt;p&gt;First, instll ranger&lt;/p&gt;

&lt;p&gt;Mac&lt;/p&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ranger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Linux&lt;/p&gt;
&lt;div class=&quot;language-zsh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;ranger
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Install ranger plugin for vim&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot; Ranger in vim&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'francoiscabrol/ranger.vim'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; Dependency for ranger in neovim&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'rbgrouleff/bclose.vim'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When ranger is open in vim or externally&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cw&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rename file/dir : change word&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rename file: add at the end of extension&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rename file: add just before the extension&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;I&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rename file/dir: add at the front of the filename/directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:bulkrename&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Rename a list of files/directories&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:mkdir newdir&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Create new directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Space&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Highlight/Select files / directories&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;V&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Highlight/Select files / directories similar to visual mode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uv&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Undo highlight/select&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yy&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Copy/yank file/dir&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Cut file/dir&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pp&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Paste file/dir. If file exists, new file created with _ at the end of the name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;po&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Paste but overwrite file/dir&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uy&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Undo Copy/yank&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dD&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Delete&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Z&lt;/code&gt; (Custom mapping)&lt;/td&gt;
      &lt;td&gt;Compress using an external script mapped to ranger&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; (Custom mapping)&lt;/td&gt;
      &lt;td&gt;Extract using an external script mapped to ranger&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;1-vim-surround-commands&quot;&gt;1. vim-surround commands&lt;/h3&gt;

&lt;p&gt;Install Plug &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tpope/vim-surround&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ds[‘“bB&lt;a href=&quot;&quot;&gt;&lt;/a&gt;{}t]&lt;/td&gt;
      &lt;td&gt;delete surrounding quotes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cs[‘“bB&lt;a href=&quot;&quot;&gt;&lt;/a&gt;{}t] [‘“bB&lt;a href=&quot;&quot;&gt;&lt;/a&gt;{}t]&lt;/td&gt;
      &lt;td&gt;change surrounding quotes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ysiw[‘“bB&lt;a href=&quot;&quot;&gt;&lt;/a&gt;{}t]&lt;/td&gt;
      &lt;td&gt;add surrounding quotes “&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;v-select, S[‘“bB&lt;a href=&quot;&quot;&gt;&lt;/a&gt;{}t]&lt;/td&gt;
      &lt;td&gt;add surrounding&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Examples:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;p&amp;gt;&lt;/code&gt; Hello &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;cst&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; Hello &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;if *x&amp;gt;3{&lt;/td&gt;
      &lt;td&gt;ysW(&lt;/td&gt;
      &lt;td&gt;if ( x&amp;gt;3 ) {&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;*“hello”&lt;/td&gt;
      &lt;td&gt;ysWf print&amp;lt;cr(Enter)&amp;gt;&lt;/td&gt;
      &lt;td&gt;print(“hello”)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;2-git-plugins-commands&quot;&gt;2. Git plugins commands&lt;/h3&gt;

&lt;p&gt;Install these plugins first&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot; Show differences with style&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'mhinz/vim-signify'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; Main GIT PLugin :Git&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'tpope/vim-fugitive'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; Git Hub plugin, enables :Gbrowse&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'tpope/vim-rhubarb'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; Git commit browser&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'junegunn/gv.vim'&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&quot; Git commit history in each line&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-o&amp;gt;&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;c-i&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Toggle between buffers&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:Git diff&lt;/td&gt;
      &lt;td&gt;Show git differences&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:Gdiffsplit&lt;/td&gt;
      &lt;td&gt;Show differences in split mode&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:GBrowse&lt;/td&gt;
      &lt;td&gt;Open the repository in github&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:GV&lt;/td&gt;
      &lt;td&gt;Show git commit history&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;3-coc-commands&quot;&gt;3. Coc commands&lt;/h3&gt;

&lt;p&gt;Install COC plugin first&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot; Intellisense&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'neoclide/coc.nvim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'branch'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'release'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;gd&lt;/td&gt;
      &lt;td&gt;Goto Definitions of variable under cursor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gr&lt;/td&gt;
      &lt;td&gt;Goto References of variable under cursor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:CocInstall tool_name E.g. :CocInstall coc-python&lt;/td&gt;
      &lt;td&gt;Installing coc tools&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:CocUninstall tool_name&lt;/td&gt;
      &lt;td&gt;Uninstalling coc tools&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:CocList extensions (Tab for autocompletion)&lt;/td&gt;
      &lt;td&gt;Show extensions&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:CocCommand&lt;/td&gt;
      &lt;td&gt;execute a COC command&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;o&lt;/td&gt;
      &lt;td&gt;expand/collapse in Coc explorer (First run :CocInstall coc-explorer)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;4-coc-python&quot;&gt;4. coc-python&lt;/h3&gt;

&lt;p&gt;Install coc-python first&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;CocInstall coc&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;python&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Shift K&lt;/td&gt;
      &lt;td&gt;doc hint&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:Format&lt;/td&gt;
      &lt;td&gt;autopep8 formatting&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-w&amp;gt;&lt;/code&gt;w&lt;/td&gt;
      &lt;td&gt;Switch cursors between sidebar and code&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-n&amp;gt;&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-n&amp;gt;&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;C-n&amp;gt;&lt;/code&gt;&lt;br /&gt; c &lt;br /&gt; I &lt;br /&gt; A&lt;/td&gt;
      &lt;td&gt;multiple cursors: &lt;br /&gt; change &lt;br /&gt; Insert at first &lt;br /&gt; Insert at end&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;5-fzf&quot;&gt;5. FZF&lt;/h3&gt;

&lt;p&gt;Install fzf in system and fzf plugin&lt;/p&gt;

&lt;p&gt;OSx&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;brew install fzf

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;To &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;useful key bindings and fuzzy completion:
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;brew &lt;span class=&quot;nt&quot;&gt;--prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;/opt/fzf/install
&lt;span class=&quot;go&quot;&gt;
brew install ripgrep
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Linux&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;sudo apt install fzf
sudo apt install ripgrep
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;FZF Plugin&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Plug &lt;span class=&quot;s1&quot;&gt;'junegunn/fzf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'do'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;-&amp;gt;&lt;/span&gt; fzf#install&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'junegunn/fzf.vim'&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'airblade/vim-rooter'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:Rg&lt;/td&gt;
      &lt;td&gt;Find word inside file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:BLines&lt;/td&gt;
      &lt;td&gt;Find all occurrences of word in a giant file&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:Lines&lt;/td&gt;
      &lt;td&gt;Same as above but search in all buffers&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:History:&lt;/td&gt;
      &lt;td&gt;History of commands ran in vim&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:Ag&lt;/td&gt;
      &lt;td&gt;similar to Rg but&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:Buffers&lt;/td&gt;
      &lt;td&gt;Search through buffers&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;gt;&lt;/td&gt;
      &lt;td&gt;Tab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gf&lt;/td&gt;
      &lt;td&gt;Goto file: open file directly from path written in vim&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;6-startify&quot;&gt;6. Startify&lt;/h3&gt;

&lt;p&gt;Install Startify Plugin for Project management&lt;/p&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot; Start Screen&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'mhinz/vim-startify'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;:SSave&lt;/td&gt;
      &lt;td&gt;Save session&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;:SLoad&lt;/td&gt;
      &lt;td&gt;Load session&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;7-vim-commentary&quot;&gt;7. vim-commentary&lt;/h3&gt;

&lt;div class=&quot;language-vim highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;&quot; Better Comments&lt;/span&gt;
Plug &lt;span class=&quot;s1&quot;&gt;'tpope/vim-commentary'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;gc&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[&amp;lt;count&amp;gt;] &amp;lt;Text object&amp;gt;&lt;/code&gt; (Examples below)&lt;/td&gt;
      &lt;td&gt;Comment out the target of a motion&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gcap&lt;/td&gt;
      &lt;td&gt;Comment out a paragraph&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gcw&lt;/td&gt;
      &lt;td&gt;Comment out the current line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gc2j&lt;/td&gt;
      &lt;td&gt;Comment out the current line and 2 lines below it&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Easy remapping
|nnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;/| :Commentary&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;
|vnoremap &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;leader&amp;gt;&lt;/code&gt;/| :Commentary&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;git-commands&quot;&gt;Git commands&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;git commit –amend&lt;/td&gt;
      &lt;td&gt;add to previous commits&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git commit -m $’Heading commit\n\nCommit description\nLine 2 of description’&lt;/td&gt;
      &lt;td&gt;Commit and commit description in 1 line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git push origin -f branchname&lt;/td&gt;
      &lt;td&gt;forced push&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git rebase master&lt;/td&gt;
      &lt;td&gt;merge changes of master onto the current branch (first pull from master before rebase)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git log&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git diff&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git remote -v&lt;/td&gt;
      &lt;td&gt;show repo information&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git reset –hard &lt;SOME-COMMIT&gt; eg git reset --hard HEAD@1&lt;/SOME-COMMIT&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git show&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git config –global user.name&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git config –global user.email&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git reset &lt;file&gt;&lt;/file&gt;&lt;/td&gt;
      &lt;td&gt;remove file from the current index (the “about to be committed” list) without changing anything else.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git checkout filename&lt;/td&gt;
      &lt;td&gt;Undo local changes to latest commit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git stash&lt;/td&gt;
      &lt;td&gt;Stash local changes temporarily&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git stash list&lt;/td&gt;
      &lt;td&gt;Show stashed branches&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git stash show&lt;/td&gt;
      &lt;td&gt;Show the latest stashed file changes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git stash show -p N&lt;/td&gt;
      &lt;td&gt;Show the Nth (see number in git stash list) stashed file changes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git stash drop stash@{index}&lt;/td&gt;
      &lt;td&gt;Remove the given stash&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;git stash clear&lt;/td&gt;
      &lt;td&gt;Remove all stashes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stash list | awk -F: '{ print &quot;\n\n\n\n&quot;; print $0; print &quot;\n\n&quot;; system(&quot;git stash show -p &quot; $1); }'&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show the changes in the stash in detail&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;ignore-files-that-have-already-been-committed-to-the-repo&quot;&gt;Ignore files that have already been committed to the repo&lt;/h2&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--cached&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Clean up ignored files&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;hard-delete-unpublished-commits&quot;&gt;Hard delete unpublished commits&lt;/h2&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git reset --hard commit_id (reset to the particular commit. It will destroy any local modifications.)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;alternatively-if-theres-work-to-keep&quot;&gt;Alternatively, if there’s work to keep&lt;/h2&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git stash
git reset --hard commit_id
git stash pop
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;This saves the modifications, then reapplies that patch after resetting. You could get merge conflicts, if you’ve modified things which were changed since the commit you reset to.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;undo-published-commits-with-new-commits&quot;&gt;Undo published commits with new commits&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;This will create three separate revert commits:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git revert a867b4af 25eee4ca 0766c053
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;It also takes ranges. This will revert the last two commits:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git revert HEAD~2..HEAD
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Similarly, you can revert a range of commits using commit hashes:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git revert a867b4af..0766c053
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Reverting a merge commit&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;git revert -m 1 &amp;lt;merge_commit_sha&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;To get just one, you could use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rebase -i&lt;/code&gt; to squash them afterwards Or, you
could do it manually (be sure to do this at top level of the repo)
get your index and work tree into the desired state, without changing HEAD:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git checkout 0d1d7fc32 .
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Then commit. Be sure and write a good message describing what you just did&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git commit
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;git-reset&quot;&gt;Git reset&lt;/h2&gt;

&lt;p&gt;git reset does know five “modes”: soft, mixed, hard, merge and keep. I will start with the first three, since these are the modes you’ll usually encounter. After that you’ll find a nice little a bonus, so stay tuned.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;soft&lt;/p&gt;

    &lt;p&gt;When using&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;  git reset --soft HEAD~1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;you will remove the last commit from the current branch, but the file changes
  will stay in your working tree. Also the changes will stay on your index, so following with a git commit will create a commit with the exact same changes as the commit you “removed” before.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;mixed&lt;/p&gt;

    &lt;p&gt;This is the default mode and quite similar to soft. When “removing” a commit
  with&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;  git reset HEAD~1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;you will still keep the changes in your working tree but not on the index; so if you want to “redo” the commit, you will have to add the changes (git add) before commiting.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;hard&lt;/p&gt;

    &lt;p&gt;When using&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;  git reset --hard HEAD~1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;you will lose all uncommited changes in addition to the changes introduced in the last commit. The changes won’t stay in your working tree so doing a git status command will tell you that you don’t have any changes in your repository.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Tread carefully with this one. If you accidentally remove uncommited changes which were never tracked by git (speak: committed or at least added to the index), you have no way of getting them back using git.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Bonus (keep)&lt;/p&gt;

    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;  git reset --keep HEAD~1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;is an interesting and useful one. It only resets the files which are different between the current HEAD and the given commit. It aborts the reset if anyone of these files has uncommited changes. It’s basically acts as a safer version of hard.&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;This mode is particularly useful when you have a bunch of changes and want to switch to a different branch without losing these changes - for example when you started to work on the wrong branch.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;remove-sensitive-file-from-github-repo-history&quot;&gt;Remove sensitive file from github repo history&lt;/h2&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git filter-branch --index-filter &quot;git rm -rf --cached --ignore-unmatch path_to_file&quot; HEAD
git push -f origin master
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;other-git-commands&quot;&gt;Other git commands&lt;/h2&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;git rm | rm plus git add combined
git rm --cached | file removed from the index (staging it for deletion on the next commit), but keep your  copy in the local file system.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;i3wm-commands&quot;&gt;i3wm commands&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;pavucontrol&lt;/li&gt;
  &lt;li&gt;alsamixer&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;mod + r - resize mode , then arrow keys or vim keys&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mod + Shift + e - exit&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mod + d - dmenu&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mod+Shift+c reload&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mod+Shift+r restart&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Alt+Shift- Change keyboard language&lt;/p&gt;

&lt;h1 id=&quot;brew-bundle-for-osx&quot;&gt;Brew bundle for OSx&lt;/h1&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;

&lt;p&gt;Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; in the root of your project with:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;Brewfile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add your dependencies in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;homebrew/cask&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tap&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;user/tap-repo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://user@bitbucket.org/user/homebrew-tap-repo.git&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask_args&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;appdir: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Applications&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;imagemagick&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;denji/nginx/nginx-full&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;args: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;with-rmtp-module&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mysql@5.6&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;restart_service: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;link: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;conflicts_with: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;mysql&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;firefox&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;args: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;appdir: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;~/my-apps/Applications&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;google-chrome&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cask&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;java&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/usr/libexec/java_home --failfast&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mas&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1Password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;id: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;443987910&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;whalebrew&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;whalebrew/wget&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cask&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mas&lt;/code&gt; entries are automatically skipped on Linux.
Other entries can be run only on (or not on) Linux with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if OS.mac?&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;if OS.linux?&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;install&quot;&gt;Install&lt;/h2&gt;

&lt;p&gt;You can then easily install all dependencies with:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Any previously-installed dependencies which have upgrades available will be upgraded.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew bundle&lt;/code&gt; will look for a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; in the current directory. Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--file&lt;/code&gt; to specify a path to a different &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;, or set the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BUNDLE_FILE&lt;/code&gt; environment variable; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--file&lt;/code&gt; takes precedence if both are provided.&lt;/p&gt;

&lt;p&gt;My &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.Brewfile&lt;/code&gt; is stored in the home directory and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BUNDLE_FILE&lt;/code&gt; environment variable is set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.Brewfile&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can skip the installation of dependencies by adding space-separated values to one or more of the following environment variables:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BUNDLE_BREW_SKIP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BUNDLE_CASK_SKIP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BUNDLE_MAS_SKIP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BUNDLE_WHALEBREW_SKIP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BUNDLE_TAP_SKIP&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew bundle&lt;/code&gt; will output a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile.lock.json&lt;/code&gt; in the same directory as the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; if all dependencies are installed successfully. This contains dependency and system status information which can be useful in debugging &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew bundle&lt;/code&gt; failures and replicating a “last known good build” state.&lt;/p&gt;

&lt;p&gt;You can opt-out of this behaviour by setting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HOMEBREW_BUNDLE_NO_LOCK&lt;/code&gt; environment variable or passing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--no-lock&lt;/code&gt; option.&lt;/p&gt;

&lt;p&gt;You may wish to check this file into the same version control system as your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; (or ensure your version control system ignores it if you’d prefer to rely on debugging information from a local machine).&lt;/p&gt;

&lt;h2 id=&quot;dump&quot;&gt;Dump&lt;/h2&gt;

&lt;p&gt;You can create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; from all the existing Homebrew packages you have installed with:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle dump
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--force&lt;/code&gt; option will allow an existing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; to be overwritten as well.
The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--describe&lt;/code&gt; option will output a description comment above each line.
The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--no-restart&lt;/code&gt; option will prevent &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;restart_service&lt;/code&gt; from being added to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew&lt;/code&gt; lines with running services.&lt;/p&gt;

&lt;h2 id=&quot;cleanup&quot;&gt;Cleanup&lt;/h2&gt;

&lt;p&gt;You can also use a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; to list the only packages that should be installed, removing any package not present or dependent. This workflow is useful for maintainers or testers who regularly install lots of formulae. To uninstall all Homebrew formulae not listed in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle cleanup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Unless the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--force&lt;/code&gt; option is passed, formulae that would be uninstalled will be listed rather than actually be uninstalled.&lt;/p&gt;

&lt;h2 id=&quot;check&quot;&gt;Check&lt;/h2&gt;

&lt;p&gt;You can check there’s anything to install/upgrade in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; by running:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle check
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This provides a successful exit code if everything is up-to-date, making it useful for scripting.&lt;/p&gt;

&lt;p&gt;For a list of dependencies that are missing, pass &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--verbose&lt;/code&gt;. This will also check &lt;em&gt;all&lt;/em&gt; dependencies by not exiting on the first missing dependency category.&lt;/p&gt;

&lt;h2 id=&quot;list&quot;&gt;List&lt;/h2&gt;

&lt;p&gt;Outputs a list of all of the entries in the Brewfile.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pass one of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--casks&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--taps&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--mas&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--whalebrew&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--brews&lt;/code&gt; to limit output to that type. Defaults to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--brews&lt;/code&gt;. Pass &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--all&lt;/code&gt; to see everything.&lt;/p&gt;

&lt;p&gt;Note that the &lt;em&gt;type&lt;/em&gt; of the package is &lt;strong&gt;not&lt;/strong&gt; included in this output.&lt;/p&gt;

&lt;h2 id=&quot;exec&quot;&gt;Exec&lt;/h2&gt;

&lt;p&gt;Runs an external command within Homebrew’s superenv build environment.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew bundle &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; bundle &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This sanitized build environment ignores unrequested dependencies, which makes sure that things you didn’t specify in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt; won’t get picked up by commands like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm install&lt;/code&gt;, etc. It will also add compiler flags which will help find keg-only dependencies like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openssl&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;icu4c&lt;/code&gt;, etc.&lt;/p&gt;

&lt;h2 id=&quot;restarting-services&quot;&gt;Restarting services&lt;/h2&gt;

&lt;p&gt;You can choose whether &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew bundle&lt;/code&gt; restarts a service every time it’s run, or
only when the formula is installed or upgraded in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Brewfile&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Always restart myservice&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'myservice'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;restart_service: &lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Only restart when installing or upgrading myservice&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;brew&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'myservice'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;restart_service: :changed&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/E-ZbrtoSuzw&quot;&gt;Vim: Tutorial on Editing, Navigation, and File Management (2018)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://youtu.be/wlR5gYd6um0&quot;&gt;Mastering the Vim Language&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/a/4114122&quot;&gt;Stack Overflow: Git commits&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Ayush Kumar Shah, PhD</name><email>ayush.kumar.shah@gmail.com</email></author><category term="commands" /><category term="linux" /><category term="mac" /><category term="vim" /><category term="tmux" /><category term="neovim" /><category term="ssh" /><category term="i32m" /><category term="brew" /><category term="shell" /><summary type="html">General Shell Commands SSH Commands tmux commands Vim Commands Git Commands i3wm commands Brew bundle</summary></entry><entry><title type="html">Organize pandas notebook with cool hacks</title><link href="http://localhost:4001/2020/06/pandas-pipe-plotly/" rel="alternate" type="text/html" title="Organize pandas notebook with cool hacks" /><published>2020-06-06T11:00:00-04:00</published><updated>2020-06-06T11:00:00-04:00</updated><id>http://localhost:4001/2020/06/pandas-pipe-plotly</id><content type="html" xml:base="http://localhost:4001/2020/06/pandas-pipe-plotly/">&lt;p&gt;&lt;img src=&quot;/assets/img/sample/messy_nb.png&quot; alt=&quot;messy-notebook&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Does it ring a bell looking at this messy notebook? I am sure you must have created or encountered a similar kind of notebook while performing data analysis tasks in pandas.&lt;/p&gt;

&lt;p&gt;Pandas is widely used by data scientists and ML Engineers all around the world to perform all kinds of data related tasks like data cleaning and preprocessing, data analysis, data manipulation, data conversion, etc. However, most of us are not using it right, as seen in the above example, which has decreased our productivity a lot.&lt;/p&gt;

&lt;p&gt;You might wonder then what is the correct way to use pandas. Is there any particular way that we can make the notebook clean and modular so that we can increase our productivity?&lt;/p&gt;

&lt;p&gt;Luckily, there is a type of quick hack or technique, whatever you may call it, which can be used to greatly improve the workflow and make notebooks not only clean and well organized but highly productive and efficient. The good thing is that you don’t need to install any extra packages or libraries. In the end, your notebook will look something like this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/clean_nb.png&quot; alt=&quot;Clean notebook&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Dark mode is available on this website. You can switch between the modes by clicking the leftmost button at the bottom of the left sidebar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/dark_mode.png&quot; alt=&quot;dark_mode&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;untitled12ipynb&quot;&gt;Untitled12.ipynb&lt;/h1&gt;

&lt;p&gt;The way to achieve clean and well-organized pandas notebooks was explored in the presentation &lt;a href=&quot;https://pydata.org/eindhoven2019/schedule/presentation/19/untitled12ipynb/&quot;&gt;Untitled12.ipynb&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/fishnets88?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor&quot;&gt;Vincent D. Warmerdam&lt;/a&gt; at &lt;a href=&quot;https://pydata.org/eindhoven2019/&quot;&gt;PyData Eindhoven 2019&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The presentation &lt;a href=&quot;https://www.youtube.com/watch?v=MpFZUshKypk&amp;amp;t=1292s&quot;&gt;Untitled12.ipynb: Prevent Miles of Scrolling, Reduce the Spaghetti Code from the Copy Pasta&lt;/a&gt; has been uploaded in youtube as well. You can watch the video below if you want:&lt;/p&gt;

&lt;div class=&quot;video-holder&quot; style=&quot;padding-bottom: 56.25%&quot;&gt;
  &lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/MpFZUshKypk&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;In this article, I will briefly summarize the presentation by &lt;a href=&quot;https://twitter.com/fishnets88?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor&quot;&gt;Vincent D. Warmerdam&lt;/a&gt; and then move on to the code implementation (solution) and a few code examples based on the methods used in his presentation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Untitled phenomena&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/Untitled12.png&quot; alt=&quot;Untitled12.ipynb&quot; /&gt;&lt;/p&gt;

&lt;p&gt;He began his talk by introducing a term called &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Untitled phenomena&lt;/code&gt;&lt;/strong&gt;. The term simply refers to the bad practice of not naming the notebook files which eventually creates an unorganized bunch of Untitled notebooks. As a result, he also named the presentation &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Untitled12.ipynb&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Moreover, not only the bad practice of naming that we follow but also the bad organization of code inside the notebook needs to be improved. Copying and pasting code multiple times creates spaghetti code. This is especially true for a lot of data science based Jupyter notebooks. The goal of his talk was to uncover a great pattern for pandas that would prevent loads of scrolling such that the code behaves like lego. He also gave some useful tricks and tips on how to prevent miles of scrolling and reduce the spaghetti code when creating Jupyter notebooks.&lt;/p&gt;

&lt;h2 id=&quot;-skip-to-coding-solution&quot;&gt;&amp;gt; &lt;a href=&quot;#solution&quot;&gt;&lt;strong&gt;Skip to coding solution&lt;/strong&gt;&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I have initially written a summary of the talk Untitled12.ipynb and explored some common problems in the usual coding style before moving to the solution. If you want to directly jump to the coding solution to create a clean pandas notebook using a pipeline, then click the link above. However, I recommend you to read the common problems I have mentioned before going to the solution.&lt;/p&gt;

&lt;h1 id=&quot;contents&quot;&gt;Contents&lt;/h1&gt;

&lt;p&gt;I will be talking about the following topics which will more or less revolve around his talk.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#importance&quot;&gt;Importance of Workflow&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#current&quot;&gt;The Usual coding style&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#problems&quot;&gt;Problems in the usual coding style&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#solution&quot;&gt;Coding Solution&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#advantages&quot;&gt;Advantages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;importance&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;importance-of-workflow&quot;&gt;Importance of Workflow&lt;/h2&gt;

&lt;p&gt;At the beginning of the presentation, he began by discussing the following points that highlight the importance of workflows and the need of jupyter-notebook and pandas over excel:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We want to separate the data from the analysis: Tha analysis portion should not modify the raw data. The raw data should be safe from these modifications so that it can be reused later as well. However, this is not possible in excel.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We want to be able to automate our analysis. The main aim of programming and workflow is automation. Our tasks become a lot easier if we can automate the analysis using a pandas script rather than performing the analysis every time using Excel.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We want our analysis to be reproducible i.e. we must be able to reproduce the same analysis results on the data at a later time in the future.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We should not pay a third part obscene amounts of money for something as basic as arithmetic. This budget is better allocated towards innovation and education of staff.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, the current style of coding in pandas and jupyter notebook has solved only the last point.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;current&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-usual-coding-style&quot;&gt;The usual coding style&lt;/h2&gt;

&lt;p&gt;Let’s explore the common practice of writing pandas code and try to point out the major problems in such approaches.&lt;/p&gt;

&lt;p&gt;Initially, I will show the general workflow that most of us follow while using pandas. I will be performing some analysis on the real COVID 19 dataset of the U.S. states obtained from
&lt;a href=&quot;https://covidtracking.com/&quot;&gt;The COVID Tracking Project&lt;/a&gt; which is available under the &lt;a href=&quot;https://creativecommons.org/licenses/by-nc/4.0/&quot;&gt;Creative Commons CC BY-NC-4.0 license&lt;/a&gt;. The dataset is updated each day between 4 pm and 5 pm EDT.&lt;/p&gt;

&lt;p&gt;After showing the common approach, I will point out the major pitfalls and then move on to the solution.&lt;/p&gt;

&lt;p&gt;First, I will download the U.S. COVID-19 dataset using the API provided by &lt;a href=&quot;https://covidtracking.com/&quot;&gt;The COVID Tracking Project&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;covid19_us_states_daily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;covidtracking&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;daily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wget&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;O&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;covidtracking&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;states&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--2020-06-05 16:34:10--  https://covidtracking.com/api/v1/states/daily.csv
Resolving covidtracking.com (covidtracking.com)... 104.248.63.231, 2604:a880:400:d1::888:7001
Connecting to covidtracking.com (covidtracking.com)|104.248.63.231|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [text/csv]
Saving to: ‘data/covid19_us_states_daily.csv’

data/covid19_us_sta     [  &amp;lt;=&amp;gt;               ] 987.40K  3.11MB/s    in 0.3s    

2020-06-05 16:34:11 (3.11 MB/s) - ‘data/covid19_us_states_daily.csv’ saved [1011093]

--2020-06-05 16:34:12--  https://covidtracking.com/api/v1/states/info.csv
Resolving covidtracking.com (covidtracking.com)... 104.248.50.87, 2604:a880:400:d1::888:7001
Connecting to covidtracking.com (covidtracking.com)|104.248.50.87|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [text/csv]
Saving to: ‘data/state_info.csv’

data/state_info.csv     [ &amp;lt;=&amp;gt;                ]  27.67K  --.-KB/s    in 0.02s   

2020-06-05 16:34:13 (1.43 MB/s) - ‘data/state_info.csv’ saved [28329]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt; 
&lt;span class=&quot;c1&quot;&gt;# Importing plotly library for plotting interactive graphs
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.graph_objects&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;go&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.subplots&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;make_subplots&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plotly.express&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;chart_studio&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;chart_studio.plotly&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first step is generally to read or import the data&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data/covid19_us_states_daily.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=&quot;&quot;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;state&lt;/th&gt;
      &lt;th&gt;positive&lt;/th&gt;
      &lt;th&gt;negative&lt;/th&gt;
      &lt;th&gt;pending&lt;/th&gt;
      &lt;th&gt;hospitalizedCurrently&lt;/th&gt;
      &lt;th&gt;hospitalizedCumulative&lt;/th&gt;
      &lt;th&gt;inIcuCurrently&lt;/th&gt;
      &lt;th&gt;inIcuCumulative&lt;/th&gt;
      &lt;th&gt;onVentilatorCurrently&lt;/th&gt;
      &lt;th&gt;onVentilatorCumulative&lt;/th&gt;
      &lt;th&gt;recovered&lt;/th&gt;
      &lt;th&gt;dataQualityGrade&lt;/th&gt;
      &lt;th&gt;lastUpdateEt&lt;/th&gt;
      &lt;th&gt;dateModified&lt;/th&gt;
      &lt;th&gt;checkTimeEt&lt;/th&gt;
      &lt;th&gt;death&lt;/th&gt;
      &lt;th&gt;hospitalized&lt;/th&gt;
      &lt;th&gt;dateChecked&lt;/th&gt;
      &lt;th&gt;fips&lt;/th&gt;
      &lt;th&gt;positiveIncrease&lt;/th&gt;
      &lt;th&gt;negativeIncrease&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;totalTestResults&lt;/th&gt;
      &lt;th&gt;totalTestResultsIncrease&lt;/th&gt;
      &lt;th&gt;posNeg&lt;/th&gt;
      &lt;th&gt;deathIncrease&lt;/th&gt;
      &lt;th&gt;hospitalizedIncrease&lt;/th&gt;
      &lt;th&gt;hash&lt;/th&gt;
      &lt;th&gt;commercialScore&lt;/th&gt;
      &lt;th&gt;negativeRegularScore&lt;/th&gt;
      &lt;th&gt;negativeScore&lt;/th&gt;
      &lt;th&gt;positiveScore&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;grade&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AK&lt;/td&gt;
      &lt;td&gt;513.0&lt;/td&gt;
      &lt;td&gt;59584.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;376.0&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;10.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1907&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;1915&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;c1046011af7271cbe2e6698526714c6cb5b92748&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AL&lt;/td&gt;
      &lt;td&gt;19072.0&lt;/td&gt;
      &lt;td&gt;216227.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;601.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;357.0&lt;/td&gt;
      &lt;td&gt;11395.0&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;653.0&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;221&lt;/td&gt;
      &lt;td&gt;3484&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;3705&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;bcbefdb36212ba2b97b5a354f4e45bf16648ee23&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AR&lt;/td&gt;
      &lt;td&gt;8067.0&lt;/td&gt;
      &lt;td&gt;134413.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;138.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;30.0&lt;/td&gt;
      &lt;td&gt;127.0&lt;/td&gt;
      &lt;td&gt;5717.0&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;142.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;acd3a4fbbc3dbb32138725f91e3261d683e7052a&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AS&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;174.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;6/1/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;05/31 20:00&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;8bbc72fa42781e0549e2e4f9f4c3e7cbef14ab32&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AZ&lt;/td&gt;
      &lt;td&gt;22753.0&lt;/td&gt;
      &lt;td&gt;227002.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1079.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;375.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;223.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;5172.0&lt;/td&gt;
      &lt;td&gt;A+&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;996.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;520&lt;/td&gt;
      &lt;td&gt;4710&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;5230&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;1fa237b8204cd23701577aef6338d339daa4452e&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;After taking a glance at the data, I realize that the date is not formatted well, so I format it.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%Y%m%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=&quot;&quot;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;state&lt;/th&gt;
      &lt;th&gt;positive&lt;/th&gt;
      &lt;th&gt;negative&lt;/th&gt;
      &lt;th&gt;pending&lt;/th&gt;
      &lt;th&gt;hospitalizedCurrently&lt;/th&gt;
      &lt;th&gt;hospitalizedCumulative&lt;/th&gt;
      &lt;th&gt;inIcuCurrently&lt;/th&gt;
      &lt;th&gt;inIcuCumulative&lt;/th&gt;
      &lt;th&gt;onVentilatorCurrently&lt;/th&gt;
      &lt;th&gt;onVentilatorCumulative&lt;/th&gt;
      &lt;th&gt;recovered&lt;/th&gt;
      &lt;th&gt;dataQualityGrade&lt;/th&gt;
      &lt;th&gt;lastUpdateEt&lt;/th&gt;
      &lt;th&gt;dateModified&lt;/th&gt;
      &lt;th&gt;checkTimeEt&lt;/th&gt;
      &lt;th&gt;death&lt;/th&gt;
      &lt;th&gt;hospitalized&lt;/th&gt;
      &lt;th&gt;dateChecked&lt;/th&gt;
      &lt;th&gt;fips&lt;/th&gt;
      &lt;th&gt;positiveIncrease&lt;/th&gt;
      &lt;th&gt;negativeIncrease&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;totalTestResults&lt;/th&gt;
      &lt;th&gt;totalTestResultsIncrease&lt;/th&gt;
      &lt;th&gt;posNeg&lt;/th&gt;
      &lt;th&gt;deathIncrease&lt;/th&gt;
      &lt;th&gt;hospitalizedIncrease&lt;/th&gt;
      &lt;th&gt;hash&lt;/th&gt;
      &lt;th&gt;commercialScore&lt;/th&gt;
      &lt;th&gt;negativeRegularScore&lt;/th&gt;
      &lt;th&gt;negativeScore&lt;/th&gt;
      &lt;th&gt;positiveScore&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;grade&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AK&lt;/td&gt;
      &lt;td&gt;513.0&lt;/td&gt;
      &lt;td&gt;59584.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;376.0&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;10.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1907&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;1915&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;c1046011af7271cbe2e6698526714c6cb5b92748&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AL&lt;/td&gt;
      &lt;td&gt;19072.0&lt;/td&gt;
      &lt;td&gt;216227.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;601.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;357.0&lt;/td&gt;
      &lt;td&gt;11395.0&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;653.0&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;221&lt;/td&gt;
      &lt;td&gt;3484&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;3705&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;bcbefdb36212ba2b97b5a354f4e45bf16648ee23&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AR&lt;/td&gt;
      &lt;td&gt;8067.0&lt;/td&gt;
      &lt;td&gt;134413.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;138.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;30.0&lt;/td&gt;
      &lt;td&gt;127.0&lt;/td&gt;
      &lt;td&gt;5717.0&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;142.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;acd3a4fbbc3dbb32138725f91e3261d683e7052a&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AS&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;174.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;6/1/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;05/31 20:00&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;8bbc72fa42781e0549e2e4f9f4c3e7cbef14ab32&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AZ&lt;/td&gt;
      &lt;td&gt;22753.0&lt;/td&gt;
      &lt;td&gt;227002.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1079.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;375.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;223.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;5172.0&lt;/td&gt;
      &lt;td&gt;A+&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;996.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;520&lt;/td&gt;
      &lt;td&gt;4710&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;5230&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;1fa237b8204cd23701577aef6338d339daa4452e&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Then, I try to view some additional information about the dataset&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
DatetimeIndex: 5113 entries, 2020-06-04 to 2020-01-22
Data columns (total 34 columns):
 #   Column                    Non-Null Count  Dtype  
---  ------                    --------------  -----  
 0   state                     5113 non-null   object 
 1   positive                  5098 non-null   float64
 2   negative                  4902 non-null   float64
 3   pending                   842 non-null    float64
 4   hospitalizedCurrently     2591 non-null   float64
 5   hospitalizedCumulative    2318 non-null   float64
 6   inIcuCurrently            1362 non-null   float64
 7   inIcuCumulative           576 non-null    float64
 8   onVentilatorCurrently     1157 non-null   float64
 9   onVentilatorCumulative    198 non-null    float64
 10  recovered                 2409 non-null   float64
 11  dataQualityGrade          4012 non-null   object 
 12  lastUpdateEt              4758 non-null   object 
 13  dateModified              4758 non-null   object 
 14  checkTimeEt               4758 non-null   object 
 15  death                     4388 non-null   float64
 16  hospitalized              2318 non-null   float64
 17  dateChecked               4758 non-null   object 
 18  fips                      5113 non-null   int64  
 19  positiveIncrease          5113 non-null   int64  
 20  negativeIncrease          5113 non-null   int64  
 21  total                     5113 non-null   int64  
 22  totalTestResults          5113 non-null   int64  
 23  totalTestResultsIncrease  5113 non-null   int64  
 24  posNeg                    5113 non-null   int64  
 25  deathIncrease             5113 non-null   int64  
 26  hospitalizedIncrease      5113 non-null   int64  
 27  hash                      5113 non-null   object 
 28  commercialScore           5113 non-null   int64  
 29  negativeRegularScore      5113 non-null   int64  
 30  negativeScore             5113 non-null   int64  
 31  positiveScore             5113 non-null   int64  
 32  score                     5113 non-null   int64  
 33  grade                     0 non-null      float64
dtypes: float64(13), int64(14), object(7)
memory usage: 1.4+ MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can see that various columns are not of use. So, I decide to remove such columns.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'posNeg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'fips'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;class 'pandas.core.frame.DataFrame'&amp;gt;
DatetimeIndex: 5113 entries, 2020-06-04 to 2020-01-22
Data columns (total 22 columns):
 #   Column                    Non-Null Count  Dtype  
---  ------                    --------------  -----  
 0   state                     5113 non-null   object 
 1   positive                  5098 non-null   float64
 2   negative                  4902 non-null   float64
 3   pending                   842 non-null    float64
 4   recovered                 2409 non-null   float64
 5   death                     4388 non-null   float64
 6   hospitalized              2318 non-null   float64
 7   dateChecked               4758 non-null   object 
 8   positiveIncrease          5113 non-null   int64  
 9   negativeIncrease          5113 non-null   int64  
 10  total                     5113 non-null   int64  
 11  totalTestResults          5113 non-null   int64  
 12  totalTestResultsIncrease  5113 non-null   int64  
 13  deathIncrease             5113 non-null   int64  
 14  hospitalizedIncrease      5113 non-null   int64  
 15  hash                      5113 non-null   object 
 16  commercialScore           5113 non-null   int64  
 17  negativeRegularScore      5113 non-null   int64  
 18  negativeScore             5113 non-null   int64  
 19  positiveScore             5113 non-null   int64  
 20  score                     5113 non-null   int64  
 21  grade                     0 non-null      float64
dtypes: float64(7), int64(12), object(3)
memory usage: 918.7+ KB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I also realize that there are a lot of missing (nan or null) values. So, I replace the missing values by 0.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=&quot;&quot;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;state&lt;/th&gt;
      &lt;th&gt;positive&lt;/th&gt;
      &lt;th&gt;negative&lt;/th&gt;
      &lt;th&gt;pending&lt;/th&gt;
      &lt;th&gt;recovered&lt;/th&gt;
      &lt;th&gt;death&lt;/th&gt;
      &lt;th&gt;hospitalized&lt;/th&gt;
      &lt;th&gt;dateChecked&lt;/th&gt;
      &lt;th&gt;positiveIncrease&lt;/th&gt;
      &lt;th&gt;negativeIncrease&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;totalTestResults&lt;/th&gt;
      &lt;th&gt;totalTestResultsIncrease&lt;/th&gt;
      &lt;th&gt;deathIncrease&lt;/th&gt;
      &lt;th&gt;hospitalizedIncrease&lt;/th&gt;
      &lt;th&gt;hash&lt;/th&gt;
      &lt;th&gt;commercialScore&lt;/th&gt;
      &lt;th&gt;negativeRegularScore&lt;/th&gt;
      &lt;th&gt;negativeScore&lt;/th&gt;
      &lt;th&gt;positiveScore&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;grade&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AK&lt;/td&gt;
      &lt;td&gt;513.0&lt;/td&gt;
      &lt;td&gt;59584.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;376.0&lt;/td&gt;
      &lt;td&gt;10.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1907&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;1915&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;c1046011af7271cbe2e6698526714c6cb5b92748&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AL&lt;/td&gt;
      &lt;td&gt;19072.0&lt;/td&gt;
      &lt;td&gt;216227.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;11395.0&lt;/td&gt;
      &lt;td&gt;653.0&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;221&lt;/td&gt;
      &lt;td&gt;3484&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;3705&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;bcbefdb36212ba2b97b5a354f4e45bf16648ee23&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AR&lt;/td&gt;
      &lt;td&gt;8067.0&lt;/td&gt;
      &lt;td&gt;134413.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;5717.0&lt;/td&gt;
      &lt;td&gt;142.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;acd3a4fbbc3dbb32138725f91e3261d683e7052a&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AS&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;174.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;8bbc72fa42781e0549e2e4f9f4c3e7cbef14ab32&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AZ&lt;/td&gt;
      &lt;td&gt;22753.0&lt;/td&gt;
      &lt;td&gt;227002.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;5172.0&lt;/td&gt;
      &lt;td&gt;996.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;520&lt;/td&gt;
      &lt;td&gt;4710&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;5230&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;1fa237b8204cd23701577aef6338d339daa4452e&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I also want to add a column corresponding to the state name instead of the abbreviation. So, I merge state_info with the current dataframe.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data/state_info.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usecols&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;how&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'left'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=&quot;&quot;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;state&lt;/th&gt;
      &lt;th&gt;positive&lt;/th&gt;
      &lt;th&gt;negative&lt;/th&gt;
      &lt;th&gt;pending&lt;/th&gt;
      &lt;th&gt;recovered&lt;/th&gt;
      &lt;th&gt;death&lt;/th&gt;
      &lt;th&gt;hospitalized&lt;/th&gt;
      &lt;th&gt;dateChecked&lt;/th&gt;
      &lt;th&gt;positiveIncrease&lt;/th&gt;
      &lt;th&gt;negativeIncrease&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;totalTestResults&lt;/th&gt;
      &lt;th&gt;totalTestResultsIncrease&lt;/th&gt;
      &lt;th&gt;deathIncrease&lt;/th&gt;
      &lt;th&gt;hospitalizedIncrease&lt;/th&gt;
      &lt;th&gt;hash&lt;/th&gt;
      &lt;th&gt;commercialScore&lt;/th&gt;
      &lt;th&gt;negativeRegularScore&lt;/th&gt;
      &lt;th&gt;negativeScore&lt;/th&gt;
      &lt;th&gt;positiveScore&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;grade&lt;/th&gt;
      &lt;th&gt;name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;2020-06-04&lt;/td&gt;
      &lt;td&gt;AK&lt;/td&gt;
      &lt;td&gt;513.0&lt;/td&gt;
      &lt;td&gt;59584.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;376.0&lt;/td&gt;
      &lt;td&gt;10.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1907&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;1915&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;c1046011af7271cbe2e6698526714c6cb5b92748&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;Alaska&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;2020-06-04&lt;/td&gt;
      &lt;td&gt;AL&lt;/td&gt;
      &lt;td&gt;19072.0&lt;/td&gt;
      &lt;td&gt;216227.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;11395.0&lt;/td&gt;
      &lt;td&gt;653.0&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;221&lt;/td&gt;
      &lt;td&gt;3484&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;3705&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;bcbefdb36212ba2b97b5a354f4e45bf16648ee23&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;Alabama&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;2020-06-04&lt;/td&gt;
      &lt;td&gt;AR&lt;/td&gt;
      &lt;td&gt;8067.0&lt;/td&gt;
      &lt;td&gt;134413.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;5717.0&lt;/td&gt;
      &lt;td&gt;142.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;acd3a4fbbc3dbb32138725f91e3261d683e7052a&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;Arkansas&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;2020-06-04&lt;/td&gt;
      &lt;td&gt;AS&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;174.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;8bbc72fa42781e0549e2e4f9f4c3e7cbef14ab32&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;American Samoa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;2020-06-04&lt;/td&gt;
      &lt;td&gt;AZ&lt;/td&gt;
      &lt;td&gt;22753.0&lt;/td&gt;
      &lt;td&gt;227002.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;5172.0&lt;/td&gt;
      &lt;td&gt;996.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;520&lt;/td&gt;
      &lt;td&gt;4710&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;5230&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;1fa237b8204cd23701577aef6338d339daa4452e&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;Arizona&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;I realize that the date index is lost. So, I reset the date index. Also, it is better to rename the column name as state_name.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'state_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=&quot;&quot;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;state&lt;/th&gt;
      &lt;th&gt;positive&lt;/th&gt;
      &lt;th&gt;negative&lt;/th&gt;
      &lt;th&gt;pending&lt;/th&gt;
      &lt;th&gt;recovered&lt;/th&gt;
      &lt;th&gt;death&lt;/th&gt;
      &lt;th&gt;hospitalized&lt;/th&gt;
      &lt;th&gt;dateChecked&lt;/th&gt;
      &lt;th&gt;positiveIncrease&lt;/th&gt;
      &lt;th&gt;negativeIncrease&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;totalTestResults&lt;/th&gt;
      &lt;th&gt;totalTestResultsIncrease&lt;/th&gt;
      &lt;th&gt;deathIncrease&lt;/th&gt;
      &lt;th&gt;hospitalizedIncrease&lt;/th&gt;
      &lt;th&gt;hash&lt;/th&gt;
      &lt;th&gt;commercialScore&lt;/th&gt;
      &lt;th&gt;negativeRegularScore&lt;/th&gt;
      &lt;th&gt;negativeScore&lt;/th&gt;
      &lt;th&gt;positiveScore&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;grade&lt;/th&gt;
      &lt;th&gt;state_name&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AK&lt;/td&gt;
      &lt;td&gt;513.0&lt;/td&gt;
      &lt;td&gt;59584.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;376.0&lt;/td&gt;
      &lt;td&gt;10.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1907&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;1915&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;c1046011af7271cbe2e6698526714c6cb5b92748&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;Alaska&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AL&lt;/td&gt;
      &lt;td&gt;19072.0&lt;/td&gt;
      &lt;td&gt;216227.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;11395.0&lt;/td&gt;
      &lt;td&gt;653.0&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;221&lt;/td&gt;
      &lt;td&gt;3484&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;3705&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;bcbefdb36212ba2b97b5a354f4e45bf16648ee23&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;Alabama&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AR&lt;/td&gt;
      &lt;td&gt;8067.0&lt;/td&gt;
      &lt;td&gt;134413.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;5717.0&lt;/td&gt;
      &lt;td&gt;142.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;acd3a4fbbc3dbb32138725f91e3261d683e7052a&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;Arkansas&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AS&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;174.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;8bbc72fa42781e0549e2e4f9f4c3e7cbef14ab32&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;American Samoa&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-06-04&lt;/th&gt;
      &lt;td&gt;AZ&lt;/td&gt;
      &lt;td&gt;22753.0&lt;/td&gt;
      &lt;td&gt;227002.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;5172.0&lt;/td&gt;
      &lt;td&gt;996.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;520&lt;/td&gt;
      &lt;td&gt;4710&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;5230&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;1fa237b8204cd23701577aef6338d339daa4452e&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;Arizona&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now that the data is ready for some analysis, I decide to plot deaths count in each state indexed by date using the interactive &lt;a href=&quot;https://plotly.com/&quot;&gt;plotly library&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total deaths in each state (Cumulative)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'daily_deaths'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'https://plotly.com/~ayush.kumar.shah/1/'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;video-holder&quot; style=&quot;padding-bottom: 88.88888888888889%&quot;&gt;
  &lt;iframe width=&quot;900&quot; height=&quot;800&quot; src=&quot;//plotly.com/~ayush.kumar.shah/1.embed&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: These plots are interactive, so you can zoom in or out, pinch, hover over the graph, download it, and so on.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, I decide to calculate the total deaths in the US across all states and plot it.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=&quot;&quot;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;positive&lt;/th&gt;
      &lt;th&gt;negative&lt;/th&gt;
      &lt;th&gt;pending&lt;/th&gt;
      &lt;th&gt;recovered&lt;/th&gt;
      &lt;th&gt;death&lt;/th&gt;
      &lt;th&gt;hospitalized&lt;/th&gt;
      &lt;th&gt;positiveIncrease&lt;/th&gt;
      &lt;th&gt;negativeIncrease&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;totalTestResults&lt;/th&gt;
      &lt;th&gt;totalTestResultsIncrease&lt;/th&gt;
      &lt;th&gt;deathIncrease&lt;/th&gt;
      &lt;th&gt;hospitalizedIncrease&lt;/th&gt;
      &lt;th&gt;commercialScore&lt;/th&gt;
      &lt;th&gt;negativeRegularScore&lt;/th&gt;
      &lt;th&gt;negativeScore&lt;/th&gt;
      &lt;th&gt;positiveScore&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;grade&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-01-22&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-01-23&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-01-24&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-01-25&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2020-01-26&lt;/th&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total deaths in the U.S. (Cumulative)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'total_daily_deaths'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'https://plotly.com/~ayush.kumar.shah/4/'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;video-holder&quot; style=&quot;padding-bottom: 88.88888888888889%&quot;&gt;
  &lt;iframe width=&quot;900&quot; height=&quot;800&quot; src=&quot;//plotly.com/~ayush.kumar.shah/4.embed&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;I also want to calculate the number of Active cases i.e.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Active = positive - deaths - recovered&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'active'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'positive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'recovered'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, after calculating the active column, I want to plot active cases instead of death. So, I go to the previous cell and replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;death&lt;/code&gt; by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;active&lt;/code&gt; and generate the plot.&lt;/p&gt;

&lt;p&gt;In [25]: df4[’&lt;del&gt;death&lt;/del&gt;’].plot()&lt;/p&gt;

&lt;p&gt;In [25]: df4[‘active’].plot()&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'active'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total active cases in the U.S. (Cumulative)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'total_daily_active'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'https://plotly.com/~ayush.kumar.shah/6/'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;video-holder&quot; style=&quot;padding-bottom: 88.88888888888889%&quot;&gt;
  &lt;iframe width=&quot;900&quot; height=&quot;800&quot; src=&quot;//plotly.com/~ayush.kumar.shah/6.embed&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Then I decide to calculate the statistics of a single month of May only. Since the data is cumulative, I need to subtract the data of May from data of April to find the increase in various statistics in May after which I plot the results.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2020-05'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'positive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'negative'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'pending'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'recovered'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'hospitalized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;'total'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;'totalTestResults'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'deathIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'hospitalizedIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;'negativeIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;'positiveIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'totalTestResultsIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2020-04'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'positive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'negative'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'pending'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'recovered'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'hospitalized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;'total'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;'totalTestResults'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'deathIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'hospitalizedIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;'negativeIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                &lt;span class=&quot;s&quot;&gt;'positiveIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;s&quot;&gt;'totalTestResultsIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;df7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;df7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=&quot;&quot;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;positive&lt;/th&gt;
      &lt;th&gt;negative&lt;/th&gt;
      &lt;th&gt;pending&lt;/th&gt;
      &lt;th&gt;recovered&lt;/th&gt;
      &lt;th&gt;death&lt;/th&gt;
      &lt;th&gt;hospitalized&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;totalTestResults&lt;/th&gt;
      &lt;th&gt;deathIncrease&lt;/th&gt;
      &lt;th&gt;hospitalizedIncrease&lt;/th&gt;
      &lt;th&gt;negativeIncrease&lt;/th&gt;
      &lt;th&gt;positiveIncrease&lt;/th&gt;
      &lt;th&gt;totalTestResultsIncrease&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;state_name&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;Alabama&lt;/th&gt;
      &lt;td&gt;10884.0&lt;/td&gt;
      &lt;td&gt;119473.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;9355.0&lt;/td&gt;
      &lt;td&gt;362.0&lt;/td&gt;
      &lt;td&gt;866.0&lt;/td&gt;
      &lt;td&gt;130357&lt;/td&gt;
      &lt;td&gt;130357&lt;/td&gt;
      &lt;td&gt;106&lt;/td&gt;
      &lt;td&gt;-112&lt;/td&gt;
      &lt;td&gt;45594&lt;/td&gt;
      &lt;td&gt;4846&lt;/td&gt;
      &lt;td&gt;50440&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Alaska&lt;/th&gt;
      &lt;td&gt;79.0&lt;/td&gt;
      &lt;td&gt;32497.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;116.0&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;32576&lt;/td&gt;
      &lt;td&gt;32576&lt;/td&gt;
      &lt;td&gt;-5&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;17327&lt;/td&gt;
      &lt;td&gt;-157&lt;/td&gt;
      &lt;td&gt;17170&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;American Samoa&lt;/th&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;171.0&lt;/td&gt;
      &lt;td&gt;-17.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;154&lt;/td&gt;
      &lt;td&gt;171&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;171&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;171&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Arizona&lt;/th&gt;
      &lt;td&gt;12288.0&lt;/td&gt;
      &lt;td&gt;141132.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;3262.0&lt;/td&gt;
      &lt;td&gt;586.0&lt;/td&gt;
      &lt;td&gt;1829.0&lt;/td&gt;
      &lt;td&gt;153420&lt;/td&gt;
      &lt;td&gt;153420&lt;/td&gt;
      &lt;td&gt;290&lt;/td&gt;
      &lt;td&gt;660&lt;/td&gt;
      &lt;td&gt;95076&lt;/td&gt;
      &lt;td&gt;5929&lt;/td&gt;
      &lt;td&gt;101005&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;Arkansas&lt;/th&gt;
      &lt;td&gt;3998.0&lt;/td&gt;
      &lt;td&gt;77138.0&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;3970.0&lt;/td&gt;
      &lt;td&gt;72.0&lt;/td&gt;
      &lt;td&gt;309.0&lt;/td&gt;
      &lt;td&gt;81136&lt;/td&gt;
      &lt;td&gt;81136&lt;/td&gt;
      &lt;td&gt;19&lt;/td&gt;
      &lt;td&gt;-93&lt;/td&gt;
      &lt;td&gt;37973&lt;/td&gt;
      &lt;td&gt;1266&lt;/td&gt;
      &lt;td&gt;39239&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total Deaths in th US in May only'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'total_deaths_May'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'https://plotly.com/~ayush.kumar.shah/12/'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;video-holder&quot; style=&quot;padding-bottom: 88.88888888888889%&quot;&gt;
  &lt;iframe width=&quot;900&quot; height=&quot;800&quot; src=&quot;//plotly.com/~ayush.kumar.shah/12.embed&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a name=&quot;problems&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;problems-in-the-usual-coding-style&quot;&gt;Problems in the usual coding style&lt;/h2&gt;

&lt;p&gt;Now that I have demonstrated the usual approach followed in pandas notebook, let’s discuss the problems in this approach.&lt;/p&gt;

&lt;h3 id=&quot;1-flow-is-disrupted&quot;&gt;1. Flow is disrupted:&lt;/h3&gt;

&lt;p&gt;The flow of the notebook is very difficult to understand and also creates problems. For example, we may create a variable name under the plot that needs it. In the above code as well, we created &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;df3['active']&lt;/code&gt;&lt;/strong&gt; below the cell in which it is needed. So, it may cause errors when run by others. Also, you may have to scroll the notebook for miles and miles.&lt;/p&gt;

&lt;h3 id=&quot;2-no-reproducibility&quot;&gt;2. No reproducibility:&lt;/h3&gt;

&lt;p&gt;When the notebook is shared with others, the other person faces a lot of problems to execute or understand the notebook. For instance, the name of the dataframes doesn’t signify any information about the type of dataframe. It runs from &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;df1&lt;/code&gt;&lt;/strong&gt; to &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;df7&lt;/code&gt;&lt;/strong&gt; and creates a lot of confusion. But you want to create a notebook which is very easy to iterate on and the one you can share with your colleagues.&lt;/p&gt;

&lt;h3 id=&quot;3-difficult-to-move-the-code-to-production&quot;&gt;3. Difficult to move the code to production:&lt;/h3&gt;

&lt;p&gt;With this approach, your code is not ready to move into production. You end up having to rewrite the whole notebook before moving it to production which is not effective.&lt;/p&gt;

&lt;h3 id=&quot;4-unable-to-automate&quot;&gt;4. Unable to automate:&lt;/h3&gt;

&lt;p&gt;The notebook in the current condition cannot be automated for analysis since there may occur a lot of problems like an error in code execution, unavailability of filenames used.&lt;/p&gt;

&lt;p&gt;Although the code may give an interesting conclusion or desired output, we are not quite sure that conclusion is at least correct.&lt;/p&gt;

&lt;p&gt;Despite having so many problems associated with this approach, it is common for everyone to still use this type of flow while making a notebook since while coding, people enjoy when the code works when they check the outputs and hence keep on similarly continuing the coding.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;solution&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;coding-solution&quot;&gt;Coding Solution&lt;/h2&gt;

&lt;h3 id=&quot;1-naming-convention&quot;&gt;1. Naming convention&lt;/h3&gt;

&lt;p&gt;Follow a naming convention for the notebook according to the task as suggested by &lt;a href=&quot;https://drivendata.github.io/cookiecutter-data-science/#notebooks-are-for-exploration-and-communication&quot;&gt;Cookiecutter Data Science&lt;/a&gt; that shows the owner and the order the analysis was done in. You can use the format&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;step&amp;gt;-&amp;lt;ghuser&amp;gt;-&amp;lt;description&amp;gt;.ipynb&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(e.g., &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.1-ayush-visualize-corona-us.ipynb&lt;/code&gt;&lt;/strong&gt;).&lt;/p&gt;

&lt;h3 id=&quot;2-plan-your-steps-beforehand&quot;&gt;2. Plan your steps beforehand&lt;/h3&gt;

&lt;p&gt;Load the data and then think in advance about all the steps of analysis or tasks you could be doing in the notebook. You don’t need to think the logic right away but just keep in mind the steps.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data/covid19_us_states_daily.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_col&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-create-functions&quot;&gt;3. Create functions&lt;/h3&gt;

&lt;p&gt;You know that initially, you want to clean the data and make sure the columns and indexes are in a proper usable format. So, why not create a function for that and name it according to the subtasks on the dataframe.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;For example, initially you want to make the index a proper datetime object. Then you may want to do remove the duplicates, then add state name. Just add these functions without even thinking the logic and then later you can add the logic. This way, you will be on track and not lost.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The functions are created after creating the decorator.&lt;/p&gt;

&lt;h3 id=&quot;4-create-proper-decorators&quot;&gt;4. Create proper decorators&lt;/h3&gt;

&lt;p&gt;Before adding functions, let’s also think about some additional utility that would be helpful. During the pandas analysis, you often check the shape, columns, and other information associated to the dataframe after performing an operation. However, a decorator can help automate this process.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Decorator&lt;/code&gt;&lt;/strong&gt; is simply a function that expects a function and returns a function. It’s really functional right, haha. Don’t get confused by the definition. It is not so difficult as it sounds. We will see how it works in the code below.&lt;/p&gt;

&lt;p&gt;Also, if you are not familiar with decorators or want to learn more about it, you can visit the &lt;a href=&quot;https://realpython.com/primer-on-python-decorators/#simple-decorators&quot;&gt;article by Geir Arne Hjelle&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;df_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;kwargs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;toc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;{} took {} time&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;After applying {}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Shape of df = {}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Columns of df are {}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Index of df is {}&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wrapper&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We have created a decorator called &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;df_info&lt;/code&gt;&lt;/strong&gt; which displays information like time taken by the function, shape, and columns after applying any function &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The advantage of using a deorator is that we get logging. You can modify the decorator according to the information that you want to log or display after performing an operation on the dataframe.&lt;/p&gt;

&lt;p&gt;Now, we create functions as our plan and use these decorators on them by using &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@df_info&lt;/code&gt;&lt;/strong&gt;. This will be equivalent to calling &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;df_info(f(df, *args, **kwargs))&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_dateindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%Y%m%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;remove_columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'posNeg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'fips'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fill_missing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fillna&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_state_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data/state_info.csv'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usecols&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reset_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;how&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'left'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;left_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'state_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;drop_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sample_daily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resample&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_active_cases&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'active'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'positive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'recovered'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;aggregate_monthly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupby&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;agg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'positive'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'negative'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'pending'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'recovered'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'hospitalized'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;'total'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;'totalTestResults'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'first'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'deathIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'hospitalizedIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;'negativeIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
            &lt;span class=&quot;s&quot;&gt;'positiveIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'totalTestResultsIncrease'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'sum'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_info&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create_month_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df_current&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aggregate_monthly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;prev_month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-12'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;prev_month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{:02d}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;df_previous&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aggregate_monthly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prev_month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df_current&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_previous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;

    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;5-remove-side-effect&quot;&gt;5. Remove side effect&lt;/h3&gt;

&lt;p&gt;However, these functions make changes that are inplace (side effects) i.e. modifies the originally loaded dataframe. So, to solve this, we add a function called start pipeline, which returns a copy of dataframe.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start_pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;6-constructing-pandas-pipelines-main-step&quot;&gt;6. Constructing pandas pipelines (Main step)&lt;/h3&gt;

&lt;p&gt;Now, let’s use these functions to achieve the previous tasks using &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pipe&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_daily&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_dateindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove_columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_missing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_state_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample_daily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_active_cases&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create_dateindex took 0:00:00.003388 time

After applying create_dateindex

Shape of df = (5113, 34)

Columns of df are Index(['state', 'positive', 'negative', 'pending', 'hospitalizedCurrently',
       'hospitalizedCumulative', 'inIcuCurrently', 'inIcuCumulative',
       'onVentilatorCurrently', 'onVentilatorCumulative', 'recovered',
       'dataQualityGrade', 'lastUpdateEt', 'dateModified', 'checkTimeEt',
       'death', 'hospitalized', 'dateChecked', 'fips', 'positiveIncrease',
       'negativeIncrease', 'total', 'totalTestResults',
       'totalTestResultsIncrease', 'posNeg', 'deathIncrease',
       'hospitalizedIncrease', 'hash', 'commercialScore',
       'negativeRegularScore', 'negativeScore', 'positiveScore', 'score',
       'grade'],
      dtype='object')

Index of df is DatetimeIndex(['2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04',
               ...
               '2020-01-31', '2020-01-30', '2020-01-29', '2020-01-28',
               '2020-01-27', '2020-01-26', '2020-01-25', '2020-01-24',
               '2020-01-23', '2020-01-22'],
              dtype='datetime64[ns]', name='date', length=5113, freq=None)

----------------------------------------------------------------------------------------------------

remove_columns took 0:00:00.002087 time

After applying remove_columns

Shape of df = (5113, 22)

Columns of df are Index(['state', 'positive', 'negative', 'pending', 'recovered', 'death',
       'hospitalized', 'dateChecked', 'positiveIncrease', 'negativeIncrease',
       'total', 'totalTestResults', 'totalTestResultsIncrease',
       'deathIncrease', 'hospitalizedIncrease', 'hash', 'commercialScore',
       'negativeRegularScore', 'negativeScore', 'positiveScore', 'score',
       'grade'],
      dtype='object')

Index of df is DatetimeIndex(['2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04',
               ...
               '2020-01-31', '2020-01-30', '2020-01-29', '2020-01-28',
               '2020-01-27', '2020-01-26', '2020-01-25', '2020-01-24',
               '2020-01-23', '2020-01-22'],
              dtype='datetime64[ns]', name='date', length=5113, freq=None)

----------------------------------------------------------------------------------------------------

fill_missing took 0:00:00.006381 time

After applying fill_missing

Shape of df = (5113, 22)

Columns of df are Index(['state', 'positive', 'negative', 'pending', 'recovered', 'death',
       'hospitalized', 'dateChecked', 'positiveIncrease', 'negativeIncrease',
       'total', 'totalTestResults', 'totalTestResultsIncrease',
       'deathIncrease', 'hospitalizedIncrease', 'hash', 'commercialScore',
       'negativeRegularScore', 'negativeScore', 'positiveScore', 'score',
       'grade'],
      dtype='object')

Index of df is DatetimeIndex(['2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04',
               ...
               '2020-01-31', '2020-01-30', '2020-01-29', '2020-01-28',
               '2020-01-27', '2020-01-26', '2020-01-25', '2020-01-24',
               '2020-01-23', '2020-01-22'],
              dtype='datetime64[ns]', name='date', length=5113, freq=None)

----------------------------------------------------------------------------------------------------

add_state_name took 0:00:00.015122 time

After applying add_state_name

Shape of df = (5113, 23)

Columns of df are Index(['state', 'positive', 'negative', 'pending', 'recovered', 'death',
       'hospitalized', 'dateChecked', 'positiveIncrease', 'negativeIncrease',
       'total', 'totalTestResults', 'totalTestResultsIncrease',
       'deathIncrease', 'hospitalizedIncrease', 'hash', 'commercialScore',
       'negativeRegularScore', 'negativeScore', 'positiveScore', 'score',
       'grade', 'state_name'],
      dtype='object')

Index of df is DatetimeIndex(['2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04',
               ...
               '2020-01-31', '2020-01-30', '2020-01-29', '2020-01-28',
               '2020-01-27', '2020-01-26', '2020-01-25', '2020-01-24',
               '2020-01-23', '2020-01-22'],
              dtype='datetime64[ns]', name='date', length=5113, freq=None)

----------------------------------------------------------------------------------------------------

sample_daily took 0:00:00.017170 time

After applying sample_daily

Shape of df = (135, 19)

Columns of df are Index(['positive', 'negative', 'pending', 'recovered', 'death', 'hospitalized',
       'positiveIncrease', 'negativeIncrease', 'total', 'totalTestResults',
       'totalTestResultsIncrease', 'deathIncrease', 'hospitalizedIncrease',
       'commercialScore', 'negativeRegularScore', 'negativeScore',
       'positiveScore', 'score', 'grade'],
      dtype='object')

Index of df is DatetimeIndex(['2020-01-22', '2020-01-23', '2020-01-24', '2020-01-25',
               '2020-01-26', '2020-01-27', '2020-01-28', '2020-01-29',
               '2020-01-30', '2020-01-31',
               ...
               '2020-05-26', '2020-05-27', '2020-05-28', '2020-05-29',
               '2020-05-30', '2020-05-31', '2020-06-01', '2020-06-02',
               '2020-06-03', '2020-06-04'],
              dtype='datetime64[ns]', name='date', length=135, freq='D')

----------------------------------------------------------------------------------------------------

add_active_cases took 0:00:00.002020 time

After applying add_active_cases

Shape of df = (135, 20)

Columns of df are Index(['positive', 'negative', 'pending', 'recovered', 'death', 'hospitalized',
       'positiveIncrease', 'negativeIncrease', 'total', 'totalTestResults',
       'totalTestResultsIncrease', 'deathIncrease', 'hospitalizedIncrease',
       'commercialScore', 'negativeRegularScore', 'negativeScore',
       'positiveScore', 'score', 'grade', 'active'],
      dtype='object')

Index of df is DatetimeIndex(['2020-01-22', '2020-01-23', '2020-01-24', '2020-01-25',
               '2020-01-26', '2020-01-27', '2020-01-28', '2020-01-29',
               '2020-01-30', '2020-01-31',
               ...
               '2020-05-26', '2020-05-27', '2020-05-28', '2020-05-29',
               '2020-05-30', '2020-05-31', '2020-06-01', '2020-06-02',
               '2020-06-03', '2020-06-04'],
              dtype='datetime64[ns]', name='date', length=135, freq='D')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check out all the logs displayed above. We are able to view in detail how each operation changed the data without having to print the dataframe after each operation.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_daily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_daily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total deaths in the U.S. (Cumulative)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'total_daily_deaths'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'https://plotly.com/~ayush.kumar.shah/4/'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;video-holder&quot; style=&quot;padding-bottom: 88.88888888888889%&quot;&gt;
  &lt;iframe width=&quot;900&quot; height=&quot;800&quot; src=&quot;//plotly.com/~ayush.kumar.shah/4.embed&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_daily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_daily&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'active'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total active cases in the U.S. (Cumulative)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'total_daily_active'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'https://plotly.com/~ayush.kumar.shah/6/'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;video-holder&quot; style=&quot;padding-bottom: 88.88888888888889%&quot;&gt;
  &lt;iframe width=&quot;900&quot; height=&quot;800&quot; src=&quot;//plotly.com/~ayush.kumar.shah/6.embed&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_may&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_month_only&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_dateindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remove_columns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_missing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_state_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; 
                &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'2020-05'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create_dateindex took 0:00:00.002492 time

After applying create_dateindex

Shape of df = (5113, 34)

Columns of df are Index(['state', 'positive', 'negative', 'pending', 'hospitalizedCurrently',
       'hospitalizedCumulative', 'inIcuCurrently', 'inIcuCumulative',
       'onVentilatorCurrently', 'onVentilatorCumulative', 'recovered',
       'dataQualityGrade', 'lastUpdateEt', 'dateModified', 'checkTimeEt',
       'death', 'hospitalized', 'dateChecked', 'fips', 'positiveIncrease',
       'negativeIncrease', 'total', 'totalTestResults',
       'totalTestResultsIncrease', 'posNeg', 'deathIncrease',
       'hospitalizedIncrease', 'hash', 'commercialScore',
       'negativeRegularScore', 'negativeScore', 'positiveScore', 'score',
       'grade'],
      dtype='object')

Index of df is DatetimeIndex(['2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04',
               ...
               '2020-01-31', '2020-01-30', '2020-01-29', '2020-01-28',
               '2020-01-27', '2020-01-26', '2020-01-25', '2020-01-24',
               '2020-01-23', '2020-01-22'],
              dtype='datetime64[ns]', name='date', length=5113, freq=None)

----------------------------------------------------------------------------------------------------

remove_columns took 0:00:00.002219 time

After applying remove_columns

Shape of df = (5113, 22)

Columns of df are Index(['state', 'positive', 'negative', 'pending', 'recovered', 'death',
       'hospitalized', 'dateChecked', 'positiveIncrease', 'negativeIncrease',
       'total', 'totalTestResults', 'totalTestResultsIncrease',
       'deathIncrease', 'hospitalizedIncrease', 'hash', 'commercialScore',
       'negativeRegularScore', 'negativeScore', 'positiveScore', 'score',
       'grade'],
      dtype='object')

Index of df is DatetimeIndex(['2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04',
               ...
               '2020-01-31', '2020-01-30', '2020-01-29', '2020-01-28',
               '2020-01-27', '2020-01-26', '2020-01-25', '2020-01-24',
               '2020-01-23', '2020-01-22'],
              dtype='datetime64[ns]', name='date', length=5113, freq=None)

----------------------------------------------------------------------------------------------------

fill_missing took 0:00:00.001883 time

After applying fill_missing

Shape of df = (5113, 22)

Columns of df are Index(['state', 'positive', 'negative', 'pending', 'recovered', 'death',
       'hospitalized', 'dateChecked', 'positiveIncrease', 'negativeIncrease',
       'total', 'totalTestResults', 'totalTestResultsIncrease',
       'deathIncrease', 'hospitalizedIncrease', 'hash', 'commercialScore',
       'negativeRegularScore', 'negativeScore', 'positiveScore', 'score',
       'grade'],
      dtype='object')

Index of df is DatetimeIndex(['2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04',
               ...
               '2020-01-31', '2020-01-30', '2020-01-29', '2020-01-28',
               '2020-01-27', '2020-01-26', '2020-01-25', '2020-01-24',
               '2020-01-23', '2020-01-22'],
              dtype='datetime64[ns]', name='date', length=5113, freq=None)

----------------------------------------------------------------------------------------------------

add_state_name took 0:00:00.014981 time

After applying add_state_name

Shape of df = (5113, 23)

Columns of df are Index(['state', 'positive', 'negative', 'pending', 'recovered', 'death',
       'hospitalized', 'dateChecked', 'positiveIncrease', 'negativeIncrease',
       'total', 'totalTestResults', 'totalTestResultsIncrease',
       'deathIncrease', 'hospitalizedIncrease', 'hash', 'commercialScore',
       'negativeRegularScore', 'negativeScore', 'positiveScore', 'score',
       'grade', 'state_name'],
      dtype='object')

Index of df is DatetimeIndex(['2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04', '2020-06-04', '2020-06-04',
               '2020-06-04', '2020-06-04',
               ...
               '2020-01-31', '2020-01-30', '2020-01-29', '2020-01-28',
               '2020-01-27', '2020-01-26', '2020-01-25', '2020-01-24',
               '2020-01-23', '2020-01-22'],
              dtype='datetime64[ns]', name='date', length=5113, freq=None)

----------------------------------------------------------------------------------------------------

create_month_only took 0:00:00.031071 time

After applying create_month_only

Shape of df = (56, 13)

Columns of df are Index(['positive', 'negative', 'pending', 'recovered', 'death', 'hospitalized',
       'total', 'totalTestResults', 'deathIncrease', 'hospitalizedIncrease',
       'negativeIncrease', 'positiveIncrease', 'totalTestResultsIncrease'],
      dtype='object')

Index of df is Index(['Alabama', 'Alaska', 'American Samoa', 'Arizona', 'Arkansas',
       'California', 'Colorado', 'Connecticut', 'Delaware',
       'District Of Columbia', 'Florida', 'Georgia', 'Guam', 'Hawaii', 'Idaho',
       'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky', 'Louisiana',
       'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',
       'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada',
       'New Hampshire', 'New Jersey', 'New Mexico', 'New York',
       'North Carolina', 'North Dakota', 'Northern Mariana Islands', 'Ohio',
       'Oklahoma', 'Oregon', 'Pennsylvania', 'Puerto Rico', 'Rhode Island',
       'South Carolina', 'South Dakota', 'Tennessee', 'Texas',
       'US Virgin Islands', 'Utah', 'Vermont', 'Virginia', 'Washington',
       'West Virginia', 'Wisconsin', 'Wyoming'],
      dtype='object', name='state_name')
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;fig4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_may&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df_may&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'death'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fig4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_layout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xaxis_title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'state_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Total Deaths in th US in May only'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;py&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fig4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'total_deaths_May'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auto_open&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'https://plotly.com/~ayush.kumar.shah/12/'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;video-holder&quot; style=&quot;padding-bottom: 88.88888888888889%&quot;&gt;
  &lt;iframe width=&quot;900&quot; height=&quot;800&quot; src=&quot;//plotly.com/~ayush.kumar.shah/12.embed&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;You can observe how easily pipe functionality has achieved the required task in a clean and organized way. Also, the original dataframe is intact and not affected by the above operations.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div&gt;
&lt;style scoped=&quot;&quot;&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border=&quot;1&quot; class=&quot;dataframe&quot;&gt;
  &lt;thead&gt;
    &lt;tr style=&quot;text-align: right;&quot;&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;state&lt;/th&gt;
      &lt;th&gt;positive&lt;/th&gt;
      &lt;th&gt;negative&lt;/th&gt;
      &lt;th&gt;pending&lt;/th&gt;
      &lt;th&gt;hospitalizedCurrently&lt;/th&gt;
      &lt;th&gt;hospitalizedCumulative&lt;/th&gt;
      &lt;th&gt;inIcuCurrently&lt;/th&gt;
      &lt;th&gt;inIcuCumulative&lt;/th&gt;
      &lt;th&gt;onVentilatorCurrently&lt;/th&gt;
      &lt;th&gt;onVentilatorCumulative&lt;/th&gt;
      &lt;th&gt;recovered&lt;/th&gt;
      &lt;th&gt;dataQualityGrade&lt;/th&gt;
      &lt;th&gt;lastUpdateEt&lt;/th&gt;
      &lt;th&gt;dateModified&lt;/th&gt;
      &lt;th&gt;checkTimeEt&lt;/th&gt;
      &lt;th&gt;death&lt;/th&gt;
      &lt;th&gt;hospitalized&lt;/th&gt;
      &lt;th&gt;dateChecked&lt;/th&gt;
      &lt;th&gt;fips&lt;/th&gt;
      &lt;th&gt;positiveIncrease&lt;/th&gt;
      &lt;th&gt;negativeIncrease&lt;/th&gt;
      &lt;th&gt;total&lt;/th&gt;
      &lt;th&gt;totalTestResults&lt;/th&gt;
      &lt;th&gt;totalTestResultsIncrease&lt;/th&gt;
      &lt;th&gt;posNeg&lt;/th&gt;
      &lt;th&gt;deathIncrease&lt;/th&gt;
      &lt;th&gt;hospitalizedIncrease&lt;/th&gt;
      &lt;th&gt;hash&lt;/th&gt;
      &lt;th&gt;commercialScore&lt;/th&gt;
      &lt;th&gt;negativeRegularScore&lt;/th&gt;
      &lt;th&gt;negativeScore&lt;/th&gt;
      &lt;th&gt;positiveScore&lt;/th&gt;
      &lt;th&gt;score&lt;/th&gt;
      &lt;th&gt;grade&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;date&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AK&lt;/td&gt;
      &lt;td&gt;513.0&lt;/td&gt;
      &lt;td&gt;59584.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;13.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;376.0&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;10.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;1907&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;1915&lt;/td&gt;
      &lt;td&gt;60097&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;c1046011af7271cbe2e6698526714c6cb5b92748&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AL&lt;/td&gt;
      &lt;td&gt;19072.0&lt;/td&gt;
      &lt;td&gt;216227.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;601.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;357.0&lt;/td&gt;
      &lt;td&gt;11395.0&lt;/td&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;653.0&lt;/td&gt;
      &lt;td&gt;1929.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;221&lt;/td&gt;
      &lt;td&gt;3484&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;3705&lt;/td&gt;
      &lt;td&gt;235299&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;29&lt;/td&gt;
      &lt;td&gt;bcbefdb36212ba2b97b5a354f4e45bf16648ee23&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AR&lt;/td&gt;
      &lt;td&gt;8067.0&lt;/td&gt;
      &lt;td&gt;134413.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;138.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;30.0&lt;/td&gt;
      &lt;td&gt;127.0&lt;/td&gt;
      &lt;td&gt;5717.0&lt;/td&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;142.0&lt;/td&gt;
      &lt;td&gt;757.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;142480&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;26&lt;/td&gt;
      &lt;td&gt;acd3a4fbbc3dbb32138725f91e3261d683e7052a&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AS&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;174.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;6/1/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;05/31 20:00&lt;/td&gt;
      &lt;td&gt;0.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;2020-06-01T00:00:00Z&lt;/td&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;174&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;8bbc72fa42781e0549e2e4f9f4c3e7cbef14ab32&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;20200604&lt;/th&gt;
      &lt;td&gt;AZ&lt;/td&gt;
      &lt;td&gt;22753.0&lt;/td&gt;
      &lt;td&gt;227002.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;1079.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;375.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;223.0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
      &lt;td&gt;5172.0&lt;/td&gt;
      &lt;td&gt;A+&lt;/td&gt;
      &lt;td&gt;6/4/2020 00:00&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;06/03 20:00&lt;/td&gt;
      &lt;td&gt;996.0&lt;/td&gt;
      &lt;td&gt;3195.0&lt;/td&gt;
      &lt;td&gt;2020-06-04T00:00:00Z&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;520&lt;/td&gt;
      &lt;td&gt;4710&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;5230&lt;/td&gt;
      &lt;td&gt;249755&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
      &lt;td&gt;1fa237b8204cd23701577aef6338d339daa4452e&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;NaN&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;h3 id=&quot;7-create-a-module&quot;&gt;7. Create a module&lt;/h3&gt;

&lt;p&gt;Finally, you can create a module (eg &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;processing.py&lt;/code&gt;) and keep all the above functions in the module. You can simply import them here and use them directly. It will clean the notebook further.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;processing.py&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ayushkumarshah/aa35d7fbfb9474d2a615665766d20a35.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;While loading the modules, load the “autoreload” extension so that you can change code in the modules and the changes get updated automatically. For more info, see &lt;a href=&quot;https://ipython.org/ipython-doc/3/config/extensions/autoreload.html&quot;&gt;autoreload documentation&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_ext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autoreload&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;autoreload&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;processing&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;The autoreload extension is already loaded. To reload it, use:
  %reload_ext autoreload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a name=&quot;advantages&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;advantages&quot;&gt;Advantages&lt;/h2&gt;

&lt;h3 id=&quot;1-effective-for-the-long-run-maintainability&quot;&gt;1. Effective for the long run (Maintainability)&lt;/h3&gt;

&lt;p&gt;Although, the approach may look like an inefficient method of coding but it is very effective in the long run since you will not have to spend hours maintaining the notebook. Given the functions are well written and well defined, they are ready for production.&lt;/p&gt;

&lt;p&gt;The code is easily sharable as well as anyone can understand the code unlike in the previous approach. Also, for complex analysis tasks, this approach can be easily used for maintaining the notebook.&lt;/p&gt;

&lt;h3 id=&quot;2-proper-flow-and-planning&quot;&gt;2. Proper flow and planning&lt;/h3&gt;

&lt;p&gt;You do not need to think about the logic of the analysis at the beginning. You can just plan your tasks and write down the required functions which already gives you kind of a framework of mind which helps to be on track. The calm that will follow is likely going to have a greater impact on innovation.&lt;/p&gt;

&lt;p&gt;Then, you can finally define the logic at the end to make it work.&lt;/p&gt;

&lt;h3 id=&quot;3-easier-to-modify&quot;&gt;3. Easier to modify&lt;/h3&gt;

&lt;p&gt;You might have noticed that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pipe&lt;/code&gt; functionality gives you the ability to modify the tasks or flow easily. You can do so by commenting or adding the functions in the pipeline.&lt;/p&gt;

&lt;p&gt;For example, you don’t want to remove the columns and sample the data daily. Then you can achieve this simply by commenting those lines as shown below:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;df_daily&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_dateindex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# .pipe(remove_columns)
&lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fill_missing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_state_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# .pipe(sample_daily)
&lt;/span&gt;            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_active_cases&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-easier-to-debug&quot;&gt;4. Easier to debug&lt;/h3&gt;

&lt;p&gt;In this approach, you know what is happening in each step which makes it a lot easier to debug. Furthermore, since all the operations are functions, you can easily debug the code by performing unit tests or using other methods on the functions.&lt;/p&gt;

&lt;h3 id=&quot;5-readability&quot;&gt;5. Readability&lt;/h3&gt;

&lt;p&gt;This approach helps you prevent miles of scrolling and also is easily readable than the previous approach. By looking at the code, you can easily understand what operations are being performed on the data and also can see the effect of those operations on the data in each step using decorator.&lt;/p&gt;

&lt;p&gt;Example:&lt;/p&gt;

&lt;p&gt;Let us consider cooking chicken. When we do so, we don’t describe the steps like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;temperature = 210 celsius
food1 = Chicken
food2 = Season(food1, with Spices)
food3 = Season(food2, with Gravy)
Serve(PutInOven(food3, temperature), on a plate)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But instead, we describe it the following way:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;temperature = 210 celsius
Chicken.Season(with Spices)
        .Season(with Gravy)
        .PutInOven(temperature)
        .Serve()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The pipe functionality helps us to write code in the latter way, which is also much more readable.&lt;/p&gt;

&lt;h3 id=&quot;6-reusability&quot;&gt;6. Reusability&lt;/h3&gt;

&lt;p&gt;During production, we turn the project into a Python package. You can import your code and use it in notebooks with a cell. You do not need to write code to do the same task in multiple notebooks.&lt;/p&gt;

&lt;h3 id=&quot;7-separation-into-analysis-and-data-manipulation&quot;&gt;7. Separation into analysis and data manipulation&lt;/h3&gt;

&lt;p&gt;Once your functions have been moved to a separate module, two levels of abstraction are obtained: analysis and data manipulation.&lt;/p&gt;

&lt;p&gt;You can fiddle around on a high level and keep the details on a low level. The notebook
then becomes the summary and a user interface where you can very quickly make nice little charts instead of manipulating data or performing analytical steps to get a result.&lt;/p&gt;

&lt;h1 id=&quot;final-notes&quot;&gt;Final notes&lt;/h1&gt;

&lt;p&gt;Hence, following these practices while coding in pandas or performing other similar tasks like building scikit-learn pipelines or other ML pipelines, can be extremely beneficial for developers. Also, all the 4 problems mentioned in the beginning have been solved in this approach. Thus, giving utmost priority to clarity and interoperability, we should remember that it’s a lot easier to solve a problem if we understand the problem well.&lt;/p&gt;

&lt;p&gt;Moreover, if you find writing these codes difficult, an open source package called &lt;a href=&quot;https://scikit-lego.readthedocs.io/en/latest/pandas_pipeline.html#&quot;&gt;Scikit-lego&lt;/a&gt; maintained by Vincent and MatthijsB, with contributions from all around the world, is available.  This package does all the hard work for you to create such pipelines along with additional features like custom logging. Do check it out.&lt;/p&gt;

&lt;p&gt;Also, if you have any confusion or suggestions, feel free to comment. I am all ears. Thank you.&lt;/p&gt;</content><author><name>Ayush Kumar Shah, PhD</name><email>ayush.kumar.shah@gmail.com</email></author><category term="python-hacks" /><category term="datascience" /><category term="pandas" /><category term="plotly" /><category term="pipeline" /><category term="EDA" /><summary type="html"></summary></entry><entry><title type="html">Part 5 - Integrate Disqus comments and Google Analytics with Pelican</title><link href="http://localhost:4001/2020/05/web-pelican-pt5-disqus-analytics/" rel="alternate" type="text/html" title="Part 5 - Integrate Disqus comments and Google Analytics with Pelican" /><published>2020-05-11T00:45:00-04:00</published><updated>2020-05-11T00:45:00-04:00</updated><id>http://localhost:4001/2020/05/web-pelican-pt5-disqus-analytics</id><content type="html" xml:base="http://localhost:4001/2020/05/web-pelican-pt5-disqus-analytics/">&lt;p&gt;This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous
articles, please check it out by clicking the links below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;Creating and deploying static websites using Markdown and the Python library Pelican&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;Part 2: Writing content using Markdown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;Part 3: Hosting your website to GitHub Pages and custom domain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt4-travisci&quot;&gt;Part 4: Setting up Travis-CI for automating deployment&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Up to this point, you have created and hosted your static website on GitHub pages/custom domain and also learned to automate deployment.&lt;/p&gt;

&lt;p&gt;Now, let’s integrate &lt;a href=&quot;(https://disqus.com/)&quot;&gt;Disqus comment service&lt;/a&gt; system and google analytics into our
site to analyze the in-depth detail about the visitors on your website.&lt;/p&gt;

&lt;h2 id=&quot;i-integrate-disqus-comments&quot;&gt;I. Integrate Disqus Comments&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Initially, go to the &lt;a href=&quot;(https://disqus.com/)&quot;&gt;Disqus website&lt;/a&gt; and create an account. After creating your account, you will see 2 options as shown below:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-options.png&quot; alt=&quot;disqus-options&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Select the 2nd option i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;I want to install Disqus on my site&lt;/code&gt;. Then fill up the fields like Website Name and Category as shown below.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-create.png&quot; alt=&quot;disqus-create&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the website name field, you may enter any name for your website.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In the next step, you will have to select a subscription plan. Select the basic plan as shown.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-plan.png&quot; alt=&quot;disqus-plan&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Then select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;I don't see my platform listed&lt;/code&gt; option as shown.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-platform.png&quot; alt=&quot;disqus-platform&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Skip the installation step, go to the bottom of the page, and click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Configure&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-config.png&quot; alt=&quot;disqus-config&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add the website name (the GitHub page link or the custom domain if you have it linked) as shown below.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-finalconfig.png&quot; alt=&quot;disqus-finalconfig&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Edit Settings&lt;/code&gt; and click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;General&lt;/code&gt;. There, you can see your Disqus website shortname in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shortname&lt;/code&gt; field. Copy that name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-editsettings.png&quot; alt=&quot;disqus-editsettings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-shortname.png&quot; alt=&quot;disqus-shortname&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add the following line with the value copied from above to both the files &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publishconf.py&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pelicanconf.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ayushblog-2'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it. You can check by using the command&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;(.venv) fab reserve
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then visit &lt;a href=&quot;localhost:8000&quot;&gt;localhost:8000&lt;/a&gt;. At the bottom, you can see the Disqus comment section. Sometimes, it doesn’t appear in localhost. But don’t worry, it will still appear in the website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-comment.png&quot; alt=&quot;disqus-comment&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can push the updated source code to view the changes on your website.&lt;/p&gt;

&lt;p&gt;You can configure the appearance and other preferences of the comment system by logging in to this link: &lt;a href=&quot;https://disqus.com/admin/&quot;&gt;Disqus admin panel&lt;/a&gt;. You can also choose to moderate the comments before making it visible to the public. If you do so, you can moderate the comments by going to the &lt;a href=&quot;https://disqus.com/admin/moderate/&quot;&gt;moderate section of disqus&lt;/a&gt;. You can approve or delete the comment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/disqus-approve.png&quot; alt=&quot;disqus-approve&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, just push the source code and you are ready to go.&lt;/p&gt;

&lt;p&gt;You can approve the comments by logging in to &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;ii-integrate-google-analytics&quot;&gt;II. Integrate Google Analytics&lt;/h2&gt;

&lt;p&gt;Now, let’s learn to integrate Google Analytics in our website.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an account for google analytics by visiting this link: &lt;a href=&quot;https://analytics.google.com/analytics/web/provision/#/provision/create&quot;&gt;Analytics - Create Account&lt;/a&gt;. Write an account name.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/analytics-create-name.png&quot; alt=&quot;analytics-create-name&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Select &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web&lt;/code&gt; and click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/analytics-create-web.png&quot; alt=&quot;analytics-create-web&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fill in the information as shown below and click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Create&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/analytics-create-property.png&quot; alt=&quot;analytics-create-property&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Accept all the terms and conditions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/analytics-create-terms.png&quot; alt=&quot;analytics-create-terms&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/analytics-tracking.png&quot; alt=&quot;analytics-tracking&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Then, you will get a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tracking ID&lt;/code&gt;. Copy the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tracking ID&lt;/code&gt; and paste it in the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publishconf.py&lt;/code&gt; as shown below.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;UA-166070073-1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s all. Now just push the updated source code to the source branch and the analytics of your website will be tracked by google.&lt;/p&gt;

&lt;p&gt;To view your detailed analytics, just log in to the &lt;a href=&quot;https://analytics.google.com/analytics/web/&quot;&gt;Google Analytics website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can view detailed stats of your website visitors like the number of total visitors, active visitors, bounce rate, location of visitors. You can also view the real-time data of your visitors. How cool
is that?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/analytics.png&quot; alt=&quot;analytics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Congratulations!!&lt;/code&gt;&lt;/strong&gt; You have completed the entire series of articles on &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;Creating and deploying static websites using Markdown and the Python library
Pelican&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any confusion in any article, feel free to comment on your queries. I will be more than happy to help. I am
also open to suggestions and feedbacks.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Also, you can use my GitHub repository for my blog post: &lt;a href=&quot;https://github.com/ayushkumarshah/ayushkumarshah.github.io/tree/pelican-backup&quot;&gt;&lt;strong&gt;ayushkumarshah.github.io&lt;/strong&gt;&lt;/a&gt; as a
reference in any point of the article. I have followed the same steps mentioned in this series to create my blog
website that you are seeing right now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to visit any specific parts of the article, you can do so from the links below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;Part 2: Writing content using Markdown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;Part 3: Hosting your website to GitHub Pages and custom domain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt4-travisci&quot;&gt;Part 4: Setting up Travis-CI for automating deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt5-disqus-analytics&quot;&gt;&lt;span style=&quot;color:green&quot;&gt;Part 5: Integrate Disqus Comments and Google Analytics with Pelican&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or, go to the &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;home-page of the article.&lt;/a&gt;&lt;/p&gt;</content><author><name>Ayush Kumar Shah</name><email>ayush.kumar.shah@gmail.com</email><uri>https://shahayush.com</uri></author><category term="Pelican-for-website-creation" /><category term="pelican" /><category term="Disqus" /><category term="comments" /><category term="discussion" /><category term="website" /><category term="analytics" /><summary type="html">This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous articles, please check it out by clicking the links below.</summary></entry><entry><title type="html">Part 4 - Setting up Travis-CI for automating deployment</title><link href="http://localhost:4001/2020/05/web-pelican-pt4-travisci/" rel="alternate" type="text/html" title="Part 4 - Setting up Travis-CI for automating deployment" /><published>2020-05-10T21:47:00-04:00</published><updated>2020-05-10T21:47:00-04:00</updated><id>http://localhost:4001/2020/05/web-pelican-pt4-travisci</id><content type="html" xml:base="http://localhost:4001/2020/05/web-pelican-pt4-travisci/">&lt;p&gt;This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous
articles, please check it out by clicking the links below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;Creating and deploying static websites using Markdown and the Python library Pelican&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;Part 2: Writing content using Markdown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;Part 3: Hosting your website to GitHub Pages and custom domain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Up to this point, you have created and hosted your static website on GitHub pages and custom domain as well.&lt;/p&gt;

&lt;p&gt;Now, let’s learn to automate the process of pushing to source and deploying to the master branch by using continuous integration
tools like &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis-CI&lt;/a&gt; so that you don’t need to manually push to two branches every time you
update your site.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;First, visit &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis-CI&lt;/a&gt; and log in using your GitHub account.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then, add your repository &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yourusername.github.io&lt;/code&gt; in the &lt;a href=&quot;https://travis-ci.org/account/repositories&quot;&gt;Repositories section&lt;/a&gt; as shown below.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/travis-repo.png&quot; alt=&quot;travis-repo&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Now, we need to generate Personal access tokens in GitHub. Go to &lt;a href=&quot;https://github.com/settings/tokens/new&quot;&gt;Generate new token for Github&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public_repo&lt;/code&gt; checkbox and click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Generate Token&lt;/code&gt; as shown below.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/public-repo.png&quot; alt=&quot;public_repo&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Copy the generated token by clicking the copy button as shown below. Note that you cannot view this token again if you don’t copy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/access-token.png&quot; alt=&quot;access-token&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Go back to &lt;a href=&quot;https://travis-ci.org/account/repositories&quot;&gt;Travis-CI Repository&lt;/a&gt; and open settings. Add the following environment variables as shown in the gif:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;GH_TOKEN                     Paste the value of access token you copied&lt;/li&gt;
      &lt;li&gt;TRAVIS_REPO_SLUG    &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username/username.github.io&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/add-token.gif&quot; alt=&quot;add-token&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Now, open &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fabfile.py&lt;/code&gt; and delete the publish function along with the wrapper &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@hosts(production)&lt;/code&gt; and replace it by the following lines:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# @hosts(production) &amp;gt; Removed
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commit_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Automatic deploy  to GitHub Pages&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commit_message&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GH_TOKEN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getenv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'GH_TOKEN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TRAVIS_REPO_SLUG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getenv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TRAVIS_REPO_SLUG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pelican -s publishconf.py'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'running'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'stdout'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'stderr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ghp-import -m '{msg}' -b {github_pages_branch} {deploy_path}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;git push -fq https://{GH_TOKEN}@github.com/{TRAVIS_REPO_SLUG}.git {github_pages_branch}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Now, create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; configuration file in the root directory for automatic deployment.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; .travis.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add the following lines in it.&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;source&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3.5&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;gem install sass&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pip install -r requirements.txt&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git config --global user.email &quot;your-github-email&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git config --global user.name &quot;your-github-name&quot;&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone https://github.com/alexandrevicenzi/Flex.git themes/Flex&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;git clone https://github.com/getpelican/pelican-plugins&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;fab publish:&quot;Build site&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above file is responsible for testing every pushed source code and also for automatic deployment of the output folder contents (HTML) to the master branch. Change the theme repository in the above file if you are using a different theme.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The final step is to add the following line to the top of your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;README.md&lt;/code&gt; file.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;# Personal Blog [![Build Status](https://travis-ci.org/username/username.github.io.svg?branch=source)](https://travis-ci.org/username/username.github.io)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that you must replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt; by your username in the above line. The above line adds the build status (passed or failed) in your repository as shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/build.png&quot; alt=&quot;build&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can click the build button to view the build status in Travis-CI in detail. You can view why the build failed in detail if the build failed and hence make the necessary corrections in the source code.&lt;/p&gt;

&lt;p&gt;If the build fails, the new contents are not pushed to the master branch and hence your website won’t be updated by failed content caused by an error in the source code. This enables your website to run without errors at all times.&lt;/p&gt;

&lt;p&gt;Hence, after a successful configuration, every time you update your source code and push to the source branch, automatic testing occurs and the website’s HTML files are pushed to the master branch.&lt;/p&gt;

&lt;p&gt;Learn to integrate Disqus comments and Google Analytics in your website in the &lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt5-disqus-analytics&quot;&gt;part
5&lt;/a&gt; of the article.&lt;/p&gt;

&lt;p&gt;If you have any confusion in any article, feel free to comment on your queries. I will be more than happy to help. I am
also open to suggestions and feedbacks.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Also, you can use my GitHub repository for my blog post: &lt;a href=&quot;https://github.com/ayushkumarshah/ayushkumarshah.github.io/tree/pelican-backup&quot;&gt;&lt;strong&gt;ayushkumarshah.github.io&lt;/strong&gt;&lt;/a&gt; as a
reference in any point of the article. I have followed the same steps mentioned in this series to create my blog
website that you are seeing right now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to visit any specific parts of the article, you can do so from the links below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;Part 2: Writing content using Markdown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;Part 3: Hosting your website to GitHub Pages and custom domain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt4-travisci&quot;&gt;&lt;span style=&quot;color:green&quot;&gt;Part 4: Setting up Travis-CI for automating deployment&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt5-disqus-analytics&quot;&gt;&lt;strong&gt;Part 5: Integrate Disqus comments and Google Analytics with Pelican&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or, go to the &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;home-page of the article.&lt;/a&gt;&lt;/p&gt;</content><author><name>Ayush Kumar Shah</name><email>ayush.kumar.shah@gmail.com</email><uri>https://shahayush.com</uri></author><category term="Pelican-for-website-creation" /><category term="pelican" /><category term="python" /><category term="Travis-ci" /><category term="build" /><category term="website" /><summary type="html">This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous articles, please check it out by clicking the links below.</summary></entry><entry><title type="html">Part 3 - Hosting your website to GitHub Pages and custom domain</title><link href="http://localhost:4001/2020/03/web-pelican-pt3-hosting/" rel="alternate" type="text/html" title="Part 3 - Hosting your website to GitHub Pages and custom domain" /><published>2020-03-28T22:30:00-04:00</published><updated>2020-03-28T22:30:00-04:00</updated><id>http://localhost:4001/2020/03/web-pelican-pt3-hosting</id><content type="html" xml:base="http://localhost:4001/2020/03/web-pelican-pt3-hosting/">&lt;p&gt;This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous
articles, please check it out by clicking the links below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;Creating and deploying static websites using Markdown and the Python library Pelican&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;Part 2: Writing content using Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Up to this point, you have created your static website locally. You surely want to share it with the public so that they
can view your articles. There are several ways of deploying your websites but the best option is by using GitHub pages.&lt;/p&gt;

&lt;h2 id=&quot;why-github-pages&quot;&gt;Why GitHub Pages?&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;It is completely free of cost. You don’t need to buy any hosting services. Github hosts your website for free.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It is secure and reliable as the website is hosted in a secure GitHub server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It becomes easy to organize and keep track of your source code.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;lets-get-started&quot;&gt;Let’s get started&lt;/h2&gt;

&lt;h3 id=&quot;1-create-and-associate-a-github-repo&quot;&gt;1. Create and associate a GitHub repo&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If you don’t already have a GitHub account, go to &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; and create one.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Login to &lt;a href=&quot;https://github.com&quot;&gt;github&lt;/a&gt; and create a repository with the name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username.github.io&lt;/code&gt; (Replace username by
your GitHub’s username. For eg, mine is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ayushkumarshah.github.io&lt;/code&gt;) and copy the clone address as shown in the gif below.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/sample/create_repo.gif&quot; alt=&quot;create_repo&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now, go to your project directory i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;'web_development'&lt;/code&gt; perform the following commands to add the remote repository that you just created to your project.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Use the URL that you just copied from the repository you created instead of the url used in the command below.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git init
&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git remote add origin &lt;span class=&quot;s1&quot;&gt;'https://github.com/username/username.github.io.git'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Also, add your GitHub email address and username to git. You can find your username by logging into
&lt;a href=&quot;https://github.com&quot;&gt;github&lt;/a&gt; and finding the name as shown below.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/sample/username.png&quot; alt=&quot;username&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s2&quot;&gt;&quot;your-github-email&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s2&quot;&gt;&quot;your-github-name&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We will be using 2 branches in our repository - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt;.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source:&lt;/code&gt; store the source code of our project (i.e. all folders and files except the output folder)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master:&lt;/code&gt; store the contents of the output folder. i.e. all the HTML files generated after building the site. The master branch will be used to host the website to GitHub-pages.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;So, let’s switch to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source&lt;/code&gt; branch.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Create and switch to a new branch &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file to mark the files which should not be added into the repository.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; .gitignore
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Copy all the lines from this link: &lt;a href=&quot;https://raw.githubusercontent.com/ayushblog/ayushblog.github.io/source/.gitignore&quot;&gt;.gitignore&lt;/a&gt; and paste it in the newly created &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You may also create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Readme.md&lt;/code&gt; file for your repository. Create it in the main directory &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;web_development&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;Readme.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;You can add information about your project in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Readme.md&lt;/code&gt; file similar to mine. You can copy it from this link:
 &lt;a href=&quot;https://raw.githubusercontent.com/ayushkumarshah/ayushkumarshah.github.io/source/README.md&quot;&gt;Readme.md&lt;/a&gt; and modify it accordingly.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-build-and-publish-your-website&quot;&gt;2. Build and publish your website&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Let’s modify the configuration for publishing the website by opening &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publishconfig.py&lt;/code&gt; and modifying/adding the following settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SITEURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://username.github.io'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DOMAIN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SITEURL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FEED_DOMAIN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SITEURL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;HTTPS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Also, let’s modify the commands in the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fabfile.py&lt;/code&gt;. Open the file and add the following settings if not
present already.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Local path configuration (can be absolute or relative to fabfile)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deploy_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'output'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DEPLOY_PATH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deploy_path&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Update blog'&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# Commit message
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Github Pages configuration
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;github_pages_branch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;master&quot;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Port for `serve`
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SERVER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'127.0.0.1'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PORT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Also, we need to add a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deploy()&lt;/code&gt; function in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fabfile.py&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;Push to GitHub pages&quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Build site&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ghp-import -m '{msg}' -b {github_pages_branch} {deploy_path}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;git push origin {github_pages_branch}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, your source code is ready. Let’s add it to the repository using the following commands:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git add &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Add source code for the first post&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git push origin &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Now, perform the following command to build and publish the site to the master branch&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;fab deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Always work in the source branch during development. The deploy() function will push the contents of the output folder
into the master branch. So, you don’t need to worry about it. So, every time you add an article, just follow the steps
above by first pushing the source code to the source repository and then running the deploy function.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Congratulations!&lt;/strong&gt; your site has been hosted to GitHub pages publicly. To check your website, open your browser on any
device and visit &lt;a href=&quot;https://your-username.github.io&quot;&gt;https://your-username.github.io&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/github_site.png&quot; alt=&quot;Github Site&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That’s it. You have now learned to create and host your static website in GitHub pages.&lt;/p&gt;

&lt;h3 id=&quot;3-linking-your-site-to-a-custom-domain-optional&quot;&gt;3. Linking your site to a custom domain (Optional)&lt;/h3&gt;

&lt;p&gt;You might want to host your site to a custom domain of your choice rather than GitHub pages. This can be done
completely free of cost if you have a custom domain registered already.&lt;/p&gt;

&lt;p&gt;If you don’t have a custom domain, you can buy them at several websites like &lt;a href=&quot;https://www.namesilo.com/&quot;&gt;Namesilo&lt;/a&gt;,
&lt;a href=&quot;https://in.godaddy.com/domains&quot;&gt;GoDaddy&lt;/a&gt;, etc.&lt;/p&gt;

&lt;p&gt;You can make your domain secure and manageable using &lt;a href=&quot;https://cloudflare.com/&quot;&gt;Cloudflare Service&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The first step is to create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;content/extra &lt;/code&gt; directory.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;content/extra/CNAME
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Then, add (copy and paste) the name of your site i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.your-site-name.com&lt;/code&gt; in the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CNAME&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change the value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SITEURL&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;publishconf.py&lt;/code&gt; file.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;SITEURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://you-site-name.com'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Now, you need to redirect your site to point to your content hosted in GitHub-pages. For that, you need to use your
domain management site which you used to buy the domain or some 3rd party management site like
&lt;a href=&quot;https://www.cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt;.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Go to the DNS section and add A records one by one to redirect your site to following 4 IP addresses (GitHub-pages):
You can see the image below for reference. I used &lt;a href=&quot;https://www.cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt; for DNS management.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;185.199.108.153&lt;/li&gt;
          &lt;li&gt;185.199.109.153&lt;/li&gt;
          &lt;li&gt;185.199.111.153&lt;/li&gt;
          &lt;li&gt;185.199.110.153&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/sample/dns.png&quot; alt=&quot;dns&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you want to redirect the GitHub-pages site to your custom domain, then go to the repository settings and add your
site name in the Custom domain field of the Github Pages section as shown below.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/custom-github.png&quot; alt=&quot;custom-github&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Congratulations!! Your blogs have been redirected to tour own custom domain. You can browse your site and check if it is
working.&lt;/p&gt;

&lt;h3 id=&quot;4-add-forked-repo-of-theme-optional&quot;&gt;4. Add forked repo of theme &lt;strong&gt;(Optional)&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;This is an optional step. Perform these steps only if want to modify or tweak with the theme (Flex in this case) to give
your website a slightly different look. You may modify colors, styles or even perform changes in the design (if you
some knowledge on web development - HTML and CSS).&lt;/p&gt;

&lt;p&gt;Since you have cloned the repository of the theme directly, modifying it directly is not a good idea since you will have
issues updating the theme to a newer version.&lt;/p&gt;

&lt;p&gt;Hence, you will create your own version of the theme repository instead i.e. forking the repository. I will demonstrate
using the Flex theme but you may follow the same steps for other themes as well. Follow these steps (also shown in
the gif below):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First, let’s delete the previously cloned repository of the Flex theme.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; themes/Flex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Now, open and fork the &lt;a href=&quot;https://github.com/alexandrevicenzi/Flex/tree/b3bd59002a3e85803332c35702d90e1e19ef39b6&quot;&gt;Flex
repository&lt;/a&gt; or the repository
of the theme you chose.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then, copy the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https&lt;/code&gt; (not ssh) link of the forked repository.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/fork_clone.gif&quot; alt=&quot;Forking_and_cloning_repo&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Now, clone the forked repo in your project.&lt;/p&gt;

    &lt;p&gt;Paste the link you copied from the forked repo instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://github.com/ayushkumarshah/Flex.git&lt;/code&gt; and
      &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;themes/name_of_theme&lt;/code&gt; as the 2nd argument in the command below.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git clone &lt;span class=&quot;s1&quot;&gt;'https://github.com/ayushkumarshah/Flex.git'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'themes/Flex'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, you may modify the theme by tweaking with the HTML and CSS files inside the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;themes/Flex/&lt;/code&gt; directory and then
commit the changes to the forked repository separately.&lt;/p&gt;

&lt;p&gt;In the next part, learn to automate the process of pushing to source and deploying to the master branch by using Continuous Integration
tools like &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis-CI&lt;/a&gt; in the &lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt4-travisci&quot;&gt;part
4&lt;/a&gt; of the article.&lt;/p&gt;

&lt;p&gt;If you have any confusion in any article, feel free to comment on your queries. I will be more than happy to help. I am
also open to suggestions and feedbacks.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Also, you can use my GitHub repository for my blog post: &lt;a href=&quot;https://github.com/ayushkumarshah/ayushkumarshah.github.io/tree/pelican-backup&quot;&gt;&lt;strong&gt;ayushkumarshah.github.io&lt;/strong&gt;&lt;/a&gt; as a
reference in any point of the article. I have followed the same steps mentioned in this series to create my blog
website that you are seeing right now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to visit any specific parts of the article, you can do so from the links below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;Part 2: Writing content using Markdown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;&lt;span style=&quot;color:green&quot;&gt;Part 3: Hosting your website to GitHub Pages and custom domain&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt4-travisci&quot;&gt;&lt;strong&gt;Part 4: Setting up Travis-CI for automating deployment&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt5-disqus-analytics&quot;&gt;Part 5: Integrate Disqus comments and Google Analytics with Pelican&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or, go to the &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;home-page of the article.&lt;/a&gt;&lt;/p&gt;</content><author><name>Ayush Kumar Shah</name><email>ayush.kumar.shah@gmail.com</email><uri>https://shahayush.com</uri></author><category term="Pelican-for-website-creation" /><category term="pelican" /><category term="python" /><category term="GitHub-pages" /><category term="website" /><summary type="html">This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous articles, please check it out by clicking the links below.</summary></entry><entry><title type="html">Part 2 - Writing content using Markdown</title><link href="http://localhost:4001/2020/03/web-pelican-pt2-markdown/" rel="alternate" type="text/html" title="Part 2 - Writing content using Markdown" /><published>2020-03-24T08:00:00-04:00</published><updated>2020-03-24T08:00:00-04:00</updated><id>http://localhost:4001/2020/03/web-pelican-pt2-markdown</id><content type="html" xml:base="http://localhost:4001/2020/03/web-pelican-pt2-markdown/">&lt;p&gt;This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous
articles, please check it out by clicking the links below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://shahayush.com/drafts/web-pelican-intro&quot;&gt;Creating and deploying static websites using Markdown and the Python library Pelican&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that you have set up your website, the next step is to start writing some content – articles, blogs, about page,
contact page, etc. We will use Markdown for writing any content you create. If you have not heard about Markdown, don’t
worry as I will guide you with examples.&lt;/p&gt;

&lt;h2 id=&quot;create-directories-and-files&quot;&gt;Create directories and files&lt;/h2&gt;

&lt;p&gt;First, let us create the required directories for articles and pages.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;content/articles
&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;content/pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, let’s create a file for your first article inside the articles directory. Note that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;touch&lt;/code&gt; command is being used only to create a file. You can create a file without using any command too. It’s up to you.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;content/articles/first_article.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, create files for about, contact, and 404 error page.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;content/pages/about.md content/pages/contact.md content/pages/404.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;At this point, your project structure should look like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_development
        ├── content
            ├── articles
                └── first_article.md
            ├── pages
                ├── 404.md
                ├── about.md
                └── contact.md
        ├── fabfile.py
        ├── output
            ├── ... (many html files)
        ├── themes
            ├── Flex/
        ├── pelican-plugins
            ├── ... (various plugin directories)
        ├── pelicanconf.py
        ├──publishconf.py
        └──requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;start-writing-articles&quot;&gt;Start Writing Articles&lt;/h2&gt;

&lt;h3 id=&quot;define-metadata-for-article&quot;&gt;Define metadata for article&lt;/h3&gt;

&lt;p&gt;Before writing the actual content, we need to define the metadata for the article. Metadata carries important information about
your article. Open the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;first_article.md&lt;/code&gt; and add the following metadata lines:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Title: My First Article
Date: 2020-03-17 00:00
Modified: 2020-03-17 00:00
Category: Blog
Slug: first-article
Summary: In this article, I have written my first article using Markdown.
Tags: pelican, markdown
Authors: Ayush Kumar Shah
Status: published
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These keywords are pretty much self-explanatory. I will just explain the new ones.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Slug defines the name of the HTML file to be generated.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Status: Choose one option among draft, published, or hidden.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;draft: In this mode, the article is not shown on the main page but can be viewed by visiting
&lt;a href=&quot;localhost:8000/drafts/first-article&quot;&gt;localhost:8000/drafts/first-article&lt;/a&gt; after serving the site (i.e. running this fab reserve). It is used to show to your friends while writing before publishing during the developing stage.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;published: In this mode, the article is shown on the main page after serving the site.
&lt;a href=&quot;localhost:8000/2020/03/first-article&quot;&gt;localhost:8000/2020/03/first-article&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;hidden: In this mode, the article is just not shown on the website.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;write-article-content&quot;&gt;Write article content&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Useful tip: Use VSCode as a text editor to manage your project and write content as you can preview .md files (content files written in markdown) in real-time directly using the Preview functionality. Hence, it becomes easy for you to view how your content will look like in real-time.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now add the following lines in the file first_article.md just below the metadata defined above.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;This is an example from [https://markdown-it.github.io/](https://markdown-it.github.io/)

---

# h1 Heading
## h2 Heading
### h3 Heading
#### h4 Heading
##### h5 Heading
###### h6 Heading


## Horizontal Rules

___

---

***


## Emphasis

**This is bold text**

__This is bold text__

*This is italic text*

_This is italic text_

~~Strikethrough~~

## Blockquotes

&amp;gt; Blockquotes can also be nested...
&amp;gt;&amp;gt; ...by using additional greater-than signs right next to each other...
&amp;gt; &amp;gt; &amp;gt; ...or with spaces between arrows.

## Lists

Unordered

+ Create a list by starting a line with `+`, `-`, or `*`
+ Sub-lists are made by indenting 2 spaces:
- Marker character change forces new list start:
    * Ac tristique libero volutpat at
    + Facilisis in pretium nisl aliquet
    - Nulla volutpat aliquam velit
+ Very easy!

Ordered

1. Lorem ipsum dolor sit amet
2. Consectetur adipiscing elit
3. Integer molestie lorem at massa

## Code

Inline `code`

Indented code

    // Some comments
    line 1 of code
    line 2 of code
    line 3 of code


Block code &quot;fences&quot;

```
Sample text here...
```

Syntax highlighting

``` python
numbers = [9, 8, 4, 1, 5]
for i, number in enumerate(numbers):
    print (i, number)
message = &quot;Hello World&quot;
hello(message)

def hello(message):
    print (message)
```

## Tables

| Option | Description |
| ------ | ----------- |
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |

Right aligned columns

| Option | Description |
| ------:| -----------:|
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |

## Links

[link text](http://dev.nodeca.com)

[link with title](http://nodeca.github.io/pica/demo/ &quot;title text!&quot;)

## Images

![Minion](https://octodex.github.com/assets/img/sample/minion.png)
![Stormtroopocat](https://octodex.github.com/assets/img/sample/stormtroopocat.jpg &quot;The Stormtroopocat&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can view the complete &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown cheatsheet&lt;/a&gt; for
reference.&lt;/p&gt;

&lt;p&gt;Now, let’s view how your article looks on the website.&lt;/p&gt;

&lt;p&gt;Close the previous process  i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fab reserve&lt;/code&gt; if it is still
running by pressing Ctrl+C or Cmd+C. Then,&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;fab reserve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open your browser and visit
&lt;a href=&quot;localhost:8000&quot;&gt;localhost:8000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ibb.co/ZdWNsvr&quot;&gt;&lt;img src=&quot;/assets/img/sample/first_article.png&quot; alt=&quot;First Article&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ibb.co/7tcxVB8&quot;&gt;&lt;img src=&quot;/assets/img/sample/first_article2.png&quot; alt=&quot;First Article 2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt;, your first article has been published on your website.
It was as simple as that. Compare the article output in the website as shown in the image above and the
markdown code to understand how the code works.&lt;/p&gt;

&lt;h2 id=&quot;start-writing-pages&quot;&gt;Start Writing Pages&lt;/h2&gt;

&lt;p&gt;Now, let’s create our pages. Pages are more permanent and don’t require detailed metadata like the articles. Example: an about me
page. We have added the links to the pages in the navigation bar.&lt;/p&gt;

&lt;h3 id=&quot;about-page&quot;&gt;About page&lt;/h3&gt;

&lt;p&gt;Open &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;about.md&lt;/code&gt; and add the following metadata lines as you did before. As you can see the difference as it is not
as detailed as before.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Title: About
Date: 2020-03-18 08:00
Modified: 2020-03-18 08:00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Write the content for your about page using Markdown in the way you want to design the
page. I have provided a simple example for my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;about&lt;/code&gt; page below.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello! I’m Ayush Kumar Shah. To talk about myself, I love football (Cristiano Ronaldo is my idol), traveling, and photography. I have a great interest in Artificial Intelligence and am pursuing my career in the same. 

I am a Machine Learning Engineer at [Fusemachines](https://www.fusemachines.com) working with global client teams to build state-of-the-art products. I have worked in the domains of Recommendation System, Nepali Handwritten character recognition, and waste classification during my time at Fusemachines.

My inquisitive nature, craving for knowledge, and longing for novelty and innovation strengthen my passion to work and learn daily to increase my knowledge horizon.

I am mostly into tech and so, my blog will be a reflection of whatever new thing I learn about tech.

Thank you for visiting my blog.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://ibb.co/FWS0rD5&quot;&gt;&lt;img src=&quot;/assets/img/sample/about.png&quot; alt=&quot;About&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;contact-page&quot;&gt;Contact page&lt;/h3&gt;

&lt;p&gt;You can configure your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;contact.md&lt;/code&gt; file similarly. Have a look at a simple example below and create a
similar one.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Title: Contact
Date: 2020-03-18 03:27
Modified: 2020-03-18 03:27
Slug: contact

If you have any questions or want to discuss something, please feel free to contact me at
[ayush.kumar.shah@gmail.com](mailto:aysh.kumar.shah@gmail.com)
[Twitter](https://twitter.com/ayushkumarshah7)
[Linkedin](https://np.linkedin.com/in/ayush7).

Likewise, if you want to inform about any type of error in my blogs, you can open an issue [here](https://github.com/ayushkumarshah/ayushkumarshah.github.io/issues/new).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://ibb.co/7z0P49d&quot;&gt;&lt;img src=&quot;/assets/img/sample/contact.png&quot; alt=&quot;Contact&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, let’s define a page for error as well. Open &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;404.md&lt;/code&gt; and add the following lines&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Title: Not Found
Status: hidden
Save_as: 404.html

Sorry, that page doesn't seem to exist. Please double-check the address or
head to the [home page][1].

[1]: {index}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, your site is ready. You may now add more articles by creating more .md files into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;content/articles/&lt;/code&gt;
directory and follow similar steps.&lt;/p&gt;

&lt;p&gt;Although your site has been built, it is not publicly available. Learn how to host your site in GitHub pages or a custom domain in &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;part
3&lt;/a&gt; of the article.&lt;/p&gt;

&lt;p&gt;If you have any confusion in any article, feel free to comment on your queries. I will be more than happy to help. I am
also open to suggestions and feedbacks.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Also, you can use my GitHub repository for my blog post: &lt;a href=&quot;https://github.com/ayushkumarshah/ayushkumarshah.github.io/tree/pelican-backup&quot;&gt;&lt;strong&gt;ayushkumarshah.github.io&lt;/strong&gt;&lt;/a&gt; as a
reference in any point of the article. I have followed the same steps mentioned in this series to create my blog
website that you are seeing right now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to visit any specific parts of the article, you can do so from the links below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;&lt;span style=&quot;color:green&quot;&gt;Part 2: Writing content using Markdown&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;&lt;strong&gt;Part 3: Hosting your website to GitHub Pages and custom domain&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt4-travisci&quot;&gt;Part 4: Setting up Travis-CI for automating deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt5-disqus-analytics&quot;&gt;Part 5: Integrate Disqus comments and Google Analytics with Pelican&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or, go to the &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;home-page of the article.&lt;/a&gt;&lt;/p&gt;</content><author><name>Ayush Kumar Shah</name><email>ayush.kumar.shah@gmail.com</email><uri>https://shahayush.com</uri></author><category term="Pelican-for-website-creation" /><category term="pelican" /><category term="markdown" /><category term="python" /><category term="website" /><summary type="html">This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous articles, please check it out by clicking the links below.</summary></entry><entry><title type="html">Part 1 - Setting up Pelican - Installation and Theme</title><link href="http://localhost:4001/2020/03/web-pelican-pt1-setup/" rel="alternate" type="text/html" title="Part 1 - Setting up Pelican - Installation and Theme" /><published>2020-03-20T08:00:00-04:00</published><updated>2020-03-20T08:00:00-04:00</updated><id>http://localhost:4001/2020/03/web-pelican-pt1-setup</id><content type="html" xml:base="http://localhost:4001/2020/03/web-pelican-pt1-setup/">&lt;p&gt;This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous article, please check it out by clicking the link below.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;Creating and deploying static websites using Markdown and the Python library Pelican&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.getpelican.com/en/stable/index.html&quot;&gt;Pelican&lt;/a&gt; is a static site generator, written in Python.&lt;/p&gt;

&lt;h2 id=&quot;features-of-pelican&quot;&gt;Features of Pelican&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Articles (e.g., blog posts) and pages (e.g., “About”, “Projects”, “Contact”)&lt;/li&gt;
  &lt;li&gt;Comments, via an external service (&lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;). If you prefer to have more control over your comment data, self-hosted comments are another option. Check out the &lt;a href=&quot;https://github.com/getpelican/pelican-plugins&quot;&gt;Pelican Plugins&lt;/a&gt; repository for more details.&lt;/li&gt;
  &lt;li&gt;Theming support (themes are created using &lt;a href=&quot;https://palletsprojects.com/p/jinja/&quot;&gt;Jinja2&lt;/a&gt; templates)&lt;/li&gt;
  &lt;li&gt;Publication of articles in multiple languages&lt;/li&gt;
  &lt;li&gt;Atom/RSS feeds&lt;/li&gt;
  &lt;li&gt;Code syntax highlighting&lt;/li&gt;
  &lt;li&gt;Import from WordPress, Dotclear, or RSS feeds&lt;/li&gt;
  &lt;li&gt;Integration with external tools: Twitter, Google Analytics, etc. (optional)&lt;/li&gt;
  &lt;li&gt;Fast rebuild times thanks to content caching and selective output writing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;setting-up-pelican&quot;&gt;Setting up Pelican&lt;/h2&gt;

&lt;p&gt;Project Structure:
Create any folder for your project. For example web_development&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;web_development
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;web_development
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;1-installation-and-configuration&quot;&gt;1. Installation and Configuration&lt;/h2&gt;

&lt;p&gt;First, install virtualenv via pip and then create a virtual environment for your project.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;virtualenv
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;virtualenv .venv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Activate the virtual environment&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, to install pelican and all packages and dependencies that we will be using later, we need to create a requirements.txt
file&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and paste the lines from this link: &lt;a href=&quot;https://raw.githubusercontent.com/ayushkumarshah/ayushkumarshah.github.io/source/requirements.txt&quot;&gt;requirements.txt&lt;/a&gt; into the file.&lt;/p&gt;

&lt;p&gt;Then just run the following command inside the virtual environment to install all these packages&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pip &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s now run a quickstart configuration script for pelican.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pelican asks a series of questions to help you get started by building required configuration files.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Welcome to pelican-quickstart v3.7.1.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This script will help you create a new Pelican-based website. Please answer the following questions so this script can generate the files
needed by Pelican.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; Where do you want to create your new web site? [.] .
&amp;gt; What will be the title of this web site? Ayush Kumar Shah
&amp;gt; Who will be the author of this web site? Ayush Kumar Shah
&amp;gt; What will be the default language of this web site? [en] en
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n) n
&amp;gt; Do you want to enable article pagination? (Y/n) Y
&amp;gt; How many articles per page do you want? [10] 5
&amp;gt; What is your time zone? [Europe/Paris] Asia/Kathmandu
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) Y
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n) n
&amp;gt; Do you want to upload your website using FTP? (y/N) N
&amp;gt; Do you want to upload your website using SSH? (y/N) N
&amp;gt; Do you want to upload your website using Dropbox? (y/N) N
&amp;gt; Do you want to upload your website using S3? (y/N) N
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N) N
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N) y
&amp;gt; Is this your personal page (username.github.io)? (y/N) y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Done. Your new project is available at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/Users/ayushkumarshah/Desktop/Blog_writing/web&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;While answering the questions, please keep these things in mind:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Title and Author: Replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ayush Kumar Shah&lt;/code&gt; with the title and author’s name that you want.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Default language: You can set any language using the standard &lt;a href=&quot;https://www.loc.gov/standards/iso639-2/php/code_list.php&quot;&gt;ISO 639.1&lt;/a&gt; 2 letter code.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Article Pagination: If you do not want to limit the number of articles on a page, enter n.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Time zone: Choose your timezone from the &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;Wikipedia&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Fabfile will help in further processes. So enter Y.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You may delete the Makefile as we will not be using it.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;Makefile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After successfully running the command, your directory should look like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_development
    ├── content/
    ├── fabfile.py
    ├── output/
    ├── pelicanconf.py
    ├── publishconf.py
    └── requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let me tell you with the purpose of each of these files :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;content/ - directory that stored al the website content&lt;/li&gt;
  &lt;li&gt;fabfile.py - script that helps us automate website generation and publishing&lt;/li&gt;
  &lt;li&gt;output/ - directory which stores the HTML files of the generated static website&lt;/li&gt;
  &lt;li&gt;pelicanconf.py - file containing all the configurations of the website
publishconf.py - file containing additional website configurations used while publishing the website
requirements.txt - contains all the packages and dependencies required&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-generate-and-view-your-website&quot;&gt;2. Generate and view your website&lt;/h2&gt;

&lt;p&gt;Till now, we have installed and configured Pelican successfully.&lt;/p&gt;

&lt;p&gt;Let’s generate our first website and preview what it looks like. Make sure you are inside .venv environment.&lt;/p&gt;

&lt;p&gt;Open &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fabfile.py&lt;/code&gt; and replace all instances of SocketServer by socketserver. (SocketServer is for python2).&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# import SocketServer
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;socketserver&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# class AddressReuseTCPServer(SocketServer.TCPServer):
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AddressReuseTCPServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socketserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TCPServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we are ready to generate and view our site.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;fab build
&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;fab serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You may also run a single command equivalent to the 2 commands above:&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;fab reserve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;In case an error occurs, open &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fabfile.py&lt;/code&gt; again and change the import line to&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SocketServer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socketserver&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After running the fab command, you will notice HTML files generated inside the output folder. These files are the HTML files
of your website.&lt;/p&gt;

&lt;p&gt;Your website should be already running in port 8000 of your localhost. To view your website, open your browser and
visit
&lt;a href=&quot;localhost:8000&quot;&gt;localhost:8000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Congratulations, you have generated your first website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ibb.co/wLVFGcf&quot;&gt;&lt;img src=&quot;/assets/img/sample/first_site.png&quot; alt=&quot;First site&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-installing-pelican-themes&quot;&gt;3. Installing Pelican Themes&lt;/h2&gt;

&lt;p&gt;Now that we have built our website, let’s make the design more beautiful and responsive. There are numerous Pelican
themes to choose from. Both the &lt;a href=&quot;http://www.pelicanthemes.com/&quot;&gt;live version of the themes&lt;/a&gt; and the
&lt;a href=&quot;https://github.com/getpelican/pelican-themes&quot;&gt;repositories&lt;/a&gt; are available. You can check them out and select the one
that suits your website. My favorite themes are
&lt;a href=&quot;https://github.com/alexandrevicenzi/Flex&quot;&gt;Flex&lt;/a&gt; (&lt;a href=&quot;http://flex.alxd.me/blog/&quot;&gt;live
version&lt;/a&gt;), &lt;a href=&quot;https://github.com/iKevinY/pneumatic&quot;&gt;Pneumatic&lt;/a&gt; (&lt;a href=&quot;https://kevinyap.ca/&quot;&gt;live version&lt;/a&gt;) and
&lt;a href=&quot;https://github.com/textbook/bulrush&quot;&gt;Bulrush&lt;/a&gt; (&lt;a href=&quot;https://blog.jonrshar.pe/&quot;&gt;live version&lt;/a&gt;). I am currently using the &lt;a href=&quot;https://github.com/textbook/bulrush&quot;&gt;Bulrush&lt;/a&gt; theme with some custom
modifications for my website.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I will demonstrate using the
&lt;a href=&quot;https://github.com/alexandrevicenzi/Flex&quot;&gt;Flex&lt;/a&gt; theme.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;First, open and clone the &lt;a href=&quot;https://github.com/alexandrevicenzi/Flex&quot;&gt;Flex
  repository&lt;/a&gt; or the repository of the theme you chose. Make sure you are inside the web_development directory.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git clone https://github.com/alexandrevicenzi/Flex.git themes/Flex
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here, the 2nd argument is the destination directory of the theme in your project. You can replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;themes/Flex&lt;/code&gt; by
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;themes/name_of_theme&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, specify the path of your theme in the configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pelicanconf.py&lt;/code&gt; by adding the following line:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;THEME = 'themes/Flex'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Although Flex theme requires no additional plugin, most of the themes require various Pelican plugins. So, let’s download the
&lt;a href=&quot;https://github.com/getpelican/pelican-plugins&quot;&gt;pelican-plugins&lt;/a&gt; into your project. Note that you may skip this step if
you want to use &lt;a href=&quot;https://github.com/alexandrevicenzi/Flex&quot;&gt;Flex&lt;/a&gt; theme.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git clone https://github.com/getpelican/pelican-plugins.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, add the path of the plugins in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pelicanconf.py&lt;/code&gt; in a similar way as before by adding the following lines:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PLUGIN_PATHS = ['./pelican-plugins']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Also, add a line specifying a list of plugins required in your theme. You can view the name of plugins required in
the documentation of the GitHub repository of the corresponding theme. Three most common plugins required by most of the themes are listed below. You can add the following line in the same file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pelicanconf.py&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PLUGINS = ['sitemap', 'post_stats', 'feed_summary']
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Some themes may require additional plugins, for which you have to search the documentation.&lt;/p&gt;

&lt;p&gt;Another way to find the plugin name required is to just skip it for a while and after everything is done,
while trying to serve your website, you will get an error message stating the name of missing plugins. Then you can add these plugins in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pelicanconf.py&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;At this state, your directory structure should look like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;web_development
    ├── content/
    ├── fabfile.py
    ├── output
        ├── ... (many HTML files)
    ├── themes
        ├── Flex/
    ├── pelican-plugins
        ├── ... (various plugin directories)
    ├── pelicanconf.py
    ├──publishconf.py
    └──requirements.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If it doesn’t, then you probably did something wrong.&lt;/p&gt;

&lt;p&gt;So, by now we have successfully installed the &lt;a href=&quot;https://github.com/alexandrevicenzi/Flex&quot;&gt;Flex&lt;/a&gt; theme on our website. You&lt;/p&gt;

&lt;h3 id=&quot;flex-configurations&quot;&gt;Flex Configurations&lt;/h3&gt;
&lt;p&gt;We can check our new theme by generating and serving our new website again.&lt;/p&gt;

&lt;p&gt;Close the previous process  i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fab reserve&lt;/code&gt; if it is still
running by pressing Ctrl+C or Cmd+C. Now,&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;fab reserve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Open your browser and visit
&lt;a href=&quot;localhost:8000&quot;&gt;localhost:8000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should see your website in a new theme.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ibb.co/ZJdh95N&quot;&gt;&lt;img src=&quot;/assets/img/sample/Flex.png&quot; alt=&quot;Flex&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;However, it is not customized to include your profile. So, let’s customize the site by adding some attributes of
the theme.&lt;/p&gt;

&lt;p&gt;First, let’s create some folders inside the content directory.&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;content/images
&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;content/extra
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s replace the default profile photo and favicon by your own.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Copy the profile image &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;profile.png&lt;/code&gt; and the collection of favicon files like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;favicon.ico, favicon-16x16.png&lt;/code&gt;, etc into the images directory you just created.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note: A favicon is a small pixel icon that appears at the top of the browser before the site name. It serves as branding
for your website. You can create one using various tools online like 
&lt;a href=&quot;https://realfavicongenerator.net/#.XnO555MzZhE&quot;&gt;realfavicongenerator&lt;/a&gt; or the favicon generator from 
&lt;a href=&quot;https://www.websiteplanet.com/webtools/favicon-generator/&quot;&gt;websiteplanet&lt;/a&gt;
(Thanks to &lt;a href=&quot;mailto:estefany.mesber@gmail.com&quot;&gt;Estefany&lt;/a&gt; for mentioning this site
which allows image size upto 5 MB)&lt;/p&gt;

&lt;p&gt;Different themes have different attributes or configurations.&lt;/p&gt;

&lt;p&gt;Check the documentation or the README.md file
of the respective theme. For &lt;a href=&quot;https://github.com/alexandrevicenzi/Flex&quot;&gt;Flex&lt;/a&gt; theme, a sample pelicanconfig.py can be
found inside the docs folder. Check it for reference and also compare it with the &lt;a href=&quot;http://flex.alxd.me/blog/&quot;&gt;live version of the
theme&lt;/a&gt;. You can find more examples of the configurations in the &lt;a href=&quot;https://github.com/alexandrevicenzi/Flex/wiki&quot;&gt;Flex
Wiki&lt;/a&gt; for reference.&lt;/p&gt;

&lt;p&gt;I will demonstrate using a sample configuration for this theme. For that, add the following lines in your
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pelicanconfig.py&lt;/code&gt; file.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;### Flex configurations
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PLUGINS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'sitemap'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'post_stats'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'feed_summary'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SITEURL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://localhost:8000'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SITETITLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Ayush Kumar Shah'&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Replace with your name
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SITESUBTITLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Ideas and Thoughts'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SITELOGO&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/assets/img/sample/profile.png'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FAVICON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/assets/img/sample/favicon.ico'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Sitemap Settings
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SITEMAP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'format'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'priorities'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'articles'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'indexes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'pages'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'changefreqs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'articles'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'monthly'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'indexes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'daily'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'pages'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'monthly'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Add a link to your social media accounts
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SOCIAL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'github'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://github.com/ayushkumarshah'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'envelope'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'mailto:ayushkumarshah@gmail.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'linkedin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://np.linkedin.com/in/ayush7'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'twitter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://twitter.com/ayushkumarshah7'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'facebook'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.facebook.com/ayushkumarshah'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'reddit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.reddit.com/user/ayushkumarshah'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;STATIC_PATHS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'images'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'extra'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Main Menu Items
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MAIN_MENU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MENUITEMS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Archives'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/archives'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Categories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/categories'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Tags'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/tags'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Code highlighting the theme
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PYGMENTS_STYLE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'friendly'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ARTICLE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{date:%Y}/{date:%m}/{slug}/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ARTICLE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'index.html'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;PAGE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{slug}/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PAGE_SAVE_AS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PAGE_URL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'index.html'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ARCHIVES_SAVE_AS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'archives.html'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;YEAR_ARCHIVE_SAVE_AS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{date:%Y}/index.html'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;MONTH_ARCHIVE_SAVE_AS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'{date:%Y}/{date:%m}/index.html'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Feed generation is usually not desired when developing
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FEED_DOMAIN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SITEURL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'feeds/all.atom.xml'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'feeds/%s.atom.xml'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AUTHOR_FEED_ATOM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AUTHOR_FEED_RSS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# HOME_HIDE_TAGS = True
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FEED_USE_SUMMARY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You may remove the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LINKS&lt;/code&gt; variable from the configuration file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pelicanconfig.py&lt;/code&gt; as you don’t need those links. We can check our new configuration by generating and serving our website again.&lt;/p&gt;

&lt;p&gt;Close the previous process  i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fab reserve&lt;/code&gt; if it is still
running by pressing Ctrl+C or Cmd+C. Now,&lt;/p&gt;

&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;(.venv) $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;fab reserve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Open your browser and visit
&lt;a href=&quot;localhost:8000&quot;&gt;localhost:8000&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You should see your website with your new configuration. Feel free to modify it as per your liking.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ibb.co/Jv8K8Sc&quot;&gt;&lt;img src=&quot;/assets/img/sample/Flex2.png&quot; alt=&quot;Flex2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Congratulations&lt;/strong&gt;, you have completed the basic setup for Pelican.&lt;/p&gt;

&lt;p&gt;However, your site has no content. Start writing content in the &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;part
2&lt;/a&gt; of the article.&lt;/p&gt;

&lt;p&gt;If you have any confusion in any article, feel free to comment on your queries. I will be more than happy to help. I am
also open to suggestions and feedbacks.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Also, you can use my GitHub repository for my blog post: &lt;a href=&quot;https://github.com/ayushkumarshah/ayushkumarshah.github.io/tree/pelican-backup&quot;&gt;&lt;strong&gt;ayushkumarshah.github.io&lt;/strong&gt;&lt;/a&gt; as a
reference in any point of the article. I have followed the same steps mentioned in this series to create my blog
website that you are seeing right now.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you want to visit any specific parts of the article, you can do so from the links below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;&lt;span style=&quot;color:green&quot;&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;&lt;strong&gt;Part 2: Writing content using Markdown&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;Part 3: Hosting your website to GitHub Pages and custom domain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt4-travisci&quot;&gt;Part 4: Setting up Travis-CI for automating deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt5-disqus-analytics&quot;&gt;Part 5: Integrate Disqus comments and Google Analytics with Pelican&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Or, go to the &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-intro&quot;&gt;home-page of the article.&lt;/a&gt;&lt;/p&gt;</content><author><name>Ayush Kumar Shah</name><email>ayush.kumar.shah@gmail.com</email><uri>https://shahayush.com</uri></author><category term="Pelican-for-website-creation" /><category term="pelican" /><category term="python" /><category term="pelican-plugin" /><category term="flex" /><category term="website" /><summary type="html">This article is a part of a series of articles for web development using pelican. So, if you haven’t read the previous article, please check it out by clicking the link below.</summary></entry><entry><title type="html">Creating and deploying static websites using Markdown and the Python library Pelican</title><link href="http://localhost:4001/2020/03/web-pelican-intro/" rel="alternate" type="text/html" title="Creating and deploying static websites using Markdown and the Python library Pelican" /><published>2020-03-19T21:00:00-04:00</published><updated>2020-03-19T21:00:00-04:00</updated><id>http://localhost:4001/2020/03/web-pelican-intro</id><content type="html" xml:base="http://localhost:4001/2020/03/web-pelican-intro/">&lt;p&gt;You may have the desire to build your personal or blog site and host it in your domain name but several obstacles like
incomplete knowledge of HTML and CSS, databases; the financial burden to host your site; the complexities of deployment and
continuous-integration pipelines, etc might have prevented you from doing so.&lt;/p&gt;

&lt;p&gt;In this article, I will explain the complete steps to build your static website like the one I have built (&lt;a href=&quot;https://shahayush.com&quot;&gt;shahayush&lt;/a&gt;) using a static site generator
called &lt;a href=&quot;https://docs.getpelican.com/en/stable/index.html&quot;&gt;Pelican&lt;/a&gt;, which is written in Python, deploy it on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub
Pages&lt;/a&gt; along with continuous integration (CI) using &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis-CI&lt;/a&gt; and
linking it to your custom domain name, all without requiring the knowledge of HTML and CSS, databases or deployment
pipelines. Furthermore, I will also explain the way to integrate a comment system called &lt;a href=&quot;https://disqus.com/&quot;&gt;Disqus&lt;/a&gt;
in your site and also help you to link &lt;a href=&quot;https://analytics.google.com/analytics/web/&quot;&gt;Google Analytics&lt;/a&gt; to your site so
that you can analyze in-depth detail about the visitors on your website.&lt;/p&gt;

&lt;p&gt;The most striking advantage of this technique is that you can perform the complete process for free except the fee to
register your domain name. You can also avoid this fee by hosting the site only on GitHub pages where you can host a
website like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;your_username.github.io&lt;/code&gt;. The only prerequisite for completing this process is the basic knowledge of
Python and Markdown for writing the articles. You might have used Markdown in jupyter notebook or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Readme.md&lt;/code&gt;
file of your GitHub repository. Don’t worry if you are completely unaware of them. You can still manage to learn them
through this article as they are extremely simple to catch up.&lt;/p&gt;

&lt;p&gt;By part 2 of the article series, you will have your website ready which will look something like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://ibb.co/px31tnG&quot;&gt;&lt;img src=&quot;/assets/img/sample/first_article.png&quot; alt=&quot;First Article&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My current &lt;a href=&quot;https://shahayush.com&quot;&gt;website&lt;/a&gt; is also built using the same methods discussed in this article series.&lt;/p&gt;

&lt;h2 id=&quot;some-samples-of-websites-built-using-pelican&quot;&gt;Some samples of websites built using pelican&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Theme: bulrush&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/sample1_bulrush.png&quot; alt=&quot;bulrush&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Theme: medius&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/sample2_medius.png&quot; alt=&quot;medius&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Demo website: &lt;a href=&quot;https://onur.github.io/medius/medius.html&quot;&gt;medius&lt;/a&gt; by &lt;a href=&quot;https://onur.github.io/medius/author/onur-aslan.html&quot;&gt;Onur Aslan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Theme: hyde&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/sample3_hyde.png&quot; alt=&quot;hyde&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Demo website: &lt;a href=&quot;http://jvanz.com/&quot;&gt;hyde&lt;/a&gt; by &lt;a href=&quot;http://jvanz.com/&quot;&gt;vanz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Theme: pneumatic&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/sample/sample4_pneumatic.png&quot; alt=&quot;pneumatic&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Demo website: &lt;a href=&quot;https://kevinyap.ca/&quot;&gt;pneumatic&lt;/a&gt;  by &lt;a href=&quot;https://kevinyap.ca/about/&quot;&gt;Kevin Yap&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Details on how to use these themes will be discussed in the &lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;Part 1&lt;/a&gt; of this article series. I just wanted to give some overview on how the website will look like in the end.&lt;/p&gt;

&lt;h2 id=&quot;advantages-of-pelican-over-wordpress&quot;&gt;Advantages of Pelican over WordPress&lt;/h2&gt;

&lt;p&gt;You may wonder that the same thing can be achieved using WordPress and has a wider community compared to Pelican. So,
why use Pelican? I have listed a few advantages of Pelican over WordPress written by &lt;a href=&quot;http://www.vcheng.org/&quot;&gt;Vincent Cheng&lt;/a&gt; in his article &lt;a href=&quot;http://www.vcheng.org/2014/02/22/migrating-from-wordpress-to-pelican/?fbclid=IwAR0dlc-OGv6B0fQ7rGSP5lHY3Ei0oNT6k9WwvX-_TB2yU_dC51uj1Y9gWkI&quot;&gt;Migrating from
Wordpress to
Pelican&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;speed:&lt;/strong&gt; a static blog is going to be faster than a dynamically generated site, no matter how much you try to optimize your Wordpress site/cache/database. This site now serves up nothing more than HTML, CSS, and JS files.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;simplicity:&lt;/strong&gt; as mentioned above, there’s no need to set up, configure, and optimize your Wordpress installation.
Simplicity in this sense also refers to the fact that this site is now powered by a smaller, simple to understand
stack, rather than a giant and much more complex PHP stack that regularly attracts attackers…&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;improved workflow:&lt;/strong&gt; you can use your preferred editor and your preferred VCS to create and keep track of your blog posts. Markdown is a nice bonus as well (it’s the sweet spot between a WYSIWYG editor and raw HTML).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;mobility/deployment:&lt;/strong&gt; static site = easier to move around (just copy the files; there’s no database to worry
about) and deploy (and often cheaper to deploy; you can do so for free with Github Pages, for example).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;less cost:&lt;/strong&gt; Switching to Pelican means that you get to move off of Wordpress.com infrastructure, hence no more ads (and no need
to pay $30/yr to get rid of them), no restrictions on the amount and type of content you upload, and being able to use your
own domain name (without having to pay extra for it), and of course not having to rely on a third-party to host your blog.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;lets-get-started&quot;&gt;Let’s get started&lt;/h2&gt;

&lt;p&gt;Now that you have got an overall insight of what this article series is about along with the benefits of using Pelican, get started by building your own website. For ease, I have divided the article into 6 parts as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt1-setup&quot;&gt;&lt;strong&gt;Part 1: Setting up Pelican - Installation and Theme&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt2-markdown&quot;&gt;Part 2: Writing content using Markdown&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/03/web-pelican-pt3-hosting&quot;&gt;Part 3: Hosting your website to GitHub Pages and custom domain&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt4-travisci&quot;&gt;Part 4: Setting up Travis-CI for automating deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://shahayush.com/2020/05/web-pelican-pt5-disqus-analytics&quot;&gt;Part 5: Integrate Disqus comments and Google Analytics with Pelican&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Click on the respective links to get started.&lt;/p&gt;</content><author><name>Ayush Kumar Shah</name><email>ayush.kumar.shah@gmail.com</email><uri>https://shahayush.com</uri></author><category term="Pelican-for-website-creation" /><category term="pelican" /><category term="python" /><category term="markdown" /><category term="GitHub-pages" /><category term="Travis-ci" /><category term="Disqus" /><category term="google analytics" /><summary type="html">You may have the desire to build your personal or blog site and host it in your domain name but several obstacles like incomplete knowledge of HTML and CSS, databases; the financial burden to host your site; the complexities of deployment and continuous-integration pipelines, etc might have prevented you from doing so.</summary></entry></feed>